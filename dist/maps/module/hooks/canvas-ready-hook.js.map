{"version":3,"sources":["module/hooks/canvas-ready-hook.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,GAAG,EAAE,sBAAmB;AAEjC,OAAO,EAAE,YAAY,EAAE,iBAAiB,EAAE,iBAAiB,EAAE,wBAAqB;AAClF,OAAO,EAAE,SAAS,EAAE,iBAAiB,EAAE,wBAAwB,EAAE,uBAAoB;AAErF;;;;;;;GAOG;AACH,MAAM,CAAC,MAAM,4BAA4B,GAAG,UAAU,OAAO,EAAE,GAAG,IAAI;IACpE,IAAI;QACF,MAAM,CAAC,KAAK,CAAC,GAAG,IAAI,CAAC;QACrB,sBAAsB;QACtB,MAAM,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,YAAY,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC,CAAC;QAClE,iBAAiB,CAAC,SAAS,EAAE,EAAE,IAAI,CAAC,CAAC;QACrC,OAAO,OAAO,CAAC,GAAG,IAAI,CAAC,CAAC;KACzB;IAAC,OAAO,KAAK,EAAE;QACd,OAAO,OAAO,CAAC,GAAG,IAAI,CAAC,CAAC;KACzB;AACH,CAAC,CAAC;AAEF;;;;;GAKG;AACH,MAAM,iBAAiB,GAAG,KAAK,EAAE,MAAM,EAAE,QAAQ,EAAE,EAAE;IACnD,GAAG,CAAC,qCAAqC,CAAC,CAAC;IAC3C,GAAG,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAC;IAEtB,IAAI,QAAQ,CAAC,IAAI,KAAK,MAAM,EAAE;QAC5B,iBAAiB,CAAC,MAAM,iBAAiB,CAAC,QAAQ,CAAC,CAAC,CAAC;KACtD;AACH,CAAC,CAAC;AAEF,MAAM,CAAC,MAAM,eAAe,GAAG,KAAK,EAAE,MAAM,EAAE,EAAE;IAC9C,GAAG,CAAC,kBAAkB,CAAC,CAAC;IACxB,GAAG,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;IACd,KAAK,IAAI,KAAK,IAAa,SAAS,EAAE,CAAC,MAAM,EAAE,UAAU,EAAE,MAAM,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,YAAY,KAAK,CAAC,EAAE;QAC5F,MAAM,UAAU,GAA2B,KAAK,CAAC,OAAO,CAAC,wBAAwB,EAAE,iBAAiB,CAAC,CAAC;QACtG,IAAI,CAAC,UAAU,EAAE,MAAM,EAAE;YACvB,SAAS;SACV;QAED,GAAG,CAAC,mCAAmC,KAAK,CAAC,EAAE,oBAAoB,UAAU,CAAC,MAAM,GAAG,CAAC,CAAC;QAEzF,IAAI,SAAS,GAAc,YAAY,CAAC,EAAE,MAAM,EAAE,UAAU,CAAC,MAAM,EAAE,OAAO,EAAE,KAAK,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;QAE/F,IAAI,UAAU,EAAE,QAAQ,EAAE;YACxB,SAAS,EAAE,QAAQ,EAAE,CAAC;SACvB;QAED,SAAS,EAAE,iBAAiB,EAAE,CAAC;KAChC;IAED,iDAAiD;IACjD,gDAAgD;AAClD,CAAC,CAAC","file":"../../../module/hooks/canvas-ready-hook.js","sourcesContent":["import { log } from '../../main';\nimport { LootToken, TokenFlags } from '../loot-token';\nimport { getLootToken, handleItemDropped, normalizeDropData } from '../mainEntry';\nimport { getCanvas, PICK_UP_STIX_FLAG, PICK_UP_STIX_MODULE_NAME } from '../settings';\n\n/**\n * This function is called when something is dropped onto the canvas. If the\n * item dropped onto the canvas is a folder, it is handled here. Otherwise,\n * the original wrapper function is used.\n *\n * @param {fn} wrapper - The original onDrop function\n * @param  {...any} args - Any arguments provided with the original onDrop function\n */\nexport const CanvasPrototypeOnDropHandler = function (wrapper, ...args) {\n  try {\n    const [event] = args;\n    // Get data from event\n    const data = JSON.parse(event.dataTransfer.getData('text/plain'));\n    dropCanvasHandler(getCanvas(), data);\n    return wrapper(...args);\n  } catch (error) {\n    return wrapper(...args);\n  }\n};\n\n/**\n * Handler for the dropCanvasData Foundry hook. This is used\n * in Foundry 0.7.0 and above\n * @param canvas\n * @param dropData\n */\nconst dropCanvasHandler = async (canvas, dropData) => {\n  log(` dropCanvasData | called with args:`);\n  log(canvas, dropData);\n\n  if (dropData.type === 'Item') {\n    handleItemDropped(await normalizeDropData(dropData));\n  }\n};\n\nexport const canvasReadyHook = async (canvas) => {\n  log(` canvasReadyHook`);\n  log([canvas]);\n  for (let token of <Token[]>getCanvas().tokens?.placeables?.filter((p) => p instanceof Token)) {\n    const tokenFlags: TokenFlags = <TokenFlags>token.getFlag(PICK_UP_STIX_MODULE_NAME, PICK_UP_STIX_FLAG);\n    if (!tokenFlags?.itemId) {\n      continue;\n    }\n\n    log(` canvasReadyHook | Found token '${token.id}' with for item '${tokenFlags.itemId}'`);\n\n    let lootToken: LootToken = getLootToken({ itemId: tokenFlags.itemId, tokenId: token.id })?.[0];\n\n    if (tokenFlags?.isLocked) {\n      lootToken?.drawLock();\n    }\n\n    lootToken?.activateListeners();\n  }\n\n  //Hooks.off('dropCanvasData', dropCanvasHandler);\n  //Hooks.on('dropCanvasData', dropCanvasHandler);\n};\n"]}