{"version":3,"sources":["module/hooks/delete-token-hook.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,KAAK,EAAE,GAAG,EAAE,IAAI,EAAE,sBAAmB;AAC9C,OAAO,EAAE,UAAU,EAAE,oBAAiB;AAEtC,OAAO,EAAE,UAAU,EAAE,YAAY,EAAE,UAAU,EAAE,wBAAoB;AACnE,OAAO,EAAE,yBAAyB,EAAE,wBAAwB,EAAE,uBAAoB;AAElF,MAAM,CAAC,MAAM,eAAe,GAAG,KAAK,EAAE,KAAK,EAAE,SAAS,EAAE,OAAO,EAAE,MAAM,EAAE,EAAE;IACzE,GAAG,CAAC,mBAAmB,CAAC,CAAC;IACzB,GAAG,CAAC,CAAC,KAAK,EAAE,SAAS,EAAE,OAAO,EAAE,MAAM,CAAC,CAAC,CAAC;IAEzC,MAAM,OAAO,GAAyB,UAAU,CAAC,UAAU,CAAC,CAAC,EAAa,EAAE,EAAE,CAAC,EAAE,CAAC,OAAO,KAAK,KAAK,CAAC,EAAE,IAAI,EAAE,CAAC,OAAO,KAAK,SAAS,CAAC,GAAG,CAAC,CAAC;IAExI,IAAI,CAAC,OAAO,EAAE;QACZ,OAAO;KACR;IAED,OAAO,CAAC,mBAAmB,EAAE,CAAC;IAE9B,IAAI,CAAC,UAAU,EAAE,EAAE;QACjB,GAAG,CAAC,yCAAyC,CAAC,CAAC;QAC/C,OAAO;KACR;IAED,MAAM,MAAM,GAAG,WAAW,CAAC,SAAS,EAAE,QAAQ,GAAC,wBAAwB,GAAC,GAAG,GAAC,yBAAyB,CAAC,CAAC;IAEvG,IAAI,MAAM,IAAI,YAAY,CAAC,EAAE,MAAM,EAAE,OAAO,EAAE,MAAM,EAAE,CAAC,CAAC,MAAM,KAAK,CAAC,EAAE;QACpE,IAAI,MAAM,EAAE;YACV,GAAG,CAAC,yDAAyD,MAAM,iBAAiB,CAAC,CAAC;YACtF,MAAM,UAAU,CAAC,MAAM,CAAC,CAAC;SAC1B;aACI;YACH,IAAI,CAAC,+DAA+D,CAAC,CAAC;YACtE,KAAK,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC;SACpB;KACF;AACH,CAAC,CAAA","file":"../../../module/hooks/delete-token-hook.js","sourcesContent":["import { debug, log, warn } from '../../main';\r\nimport { amIFirstGm } from \"../utils\";\r\nimport { LootToken } from \"../loot-token\"\r\nimport { deleteItem, getLootToken, lootTokens } from \"../mainEntry\"\r\nimport { PICK_UP_STIX_ITEM_ID_FLAG, PICK_UP_STIX_MODULE_NAME } from '../settings';\r\n\r\nexport const deleteTokenHook = async (scene, tokenData, options, userId) => {\r\n  log(` deleteTokenHook:`);\r\n  log([scene, tokenData, options, userId]);\r\n\r\n  const removed: LootToken = <LootToken>lootTokens.findSplice((lt: LootToken) => lt.sceneId === scene.id && lt.tokenId === tokenData._id);\r\n\r\n  if (!removed) {\r\n    return;\r\n  }\r\n\r\n  removed.deactivateListeners();\r\n\r\n  if (!amIFirstGm()) {\r\n    log(` deleteTokenHook | User is not first GM`);\r\n    return;\r\n  }\r\n\r\n  const itemId = getProperty(tokenData, 'flags.'+PICK_UP_STIX_MODULE_NAME+'.'+PICK_UP_STIX_ITEM_ID_FLAG);\r\n\r\n  if (itemId && getLootToken({ itemId: removed?.itemId }).length === 0) {\r\n    if (itemId) {\r\n      log(` deleteTokenHook | No LootTokens left, deleting Item '${itemId}' for LootToken`);\r\n      await deleteItem(itemId);\r\n    }\r\n    else {\r\n      warn(` deleteTokenHook | Item ID not found on TokenFlags for token:`);\r\n      debug([tokenData]);\r\n    }\r\n  }\r\n}\r\n"]}