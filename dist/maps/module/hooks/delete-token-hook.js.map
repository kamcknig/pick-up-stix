{"version":3,"sources":["module/hooks/delete-token-hook.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,KAAK,EAAE,GAAG,EAAE,IAAI,EAAE,sBAAmB;AAC9C,OAAO,EAAE,UAAU,EAAE,oBAAiB;AAEtC,OAAO,EAAE,UAAU,EAAE,YAAY,EAAE,UAAU,EAAE,wBAAqB;AACpE,OAAO,EAAE,yBAAyB,EAAE,wBAAwB,EAAE,uBAAoB;AAElF,MAAM,CAAC,MAAM,eAAe,GAAG,KAAK,EAAE,KAAK,EAAE,SAAS,EAAE,OAAO,EAAE,MAAM,EAAE,EAAE;IACzE,GAAG,CAAC,mBAAmB,CAAC,CAAC;IACzB,GAAG,CAAC,CAAC,KAAK,EAAE,SAAS,EAAE,OAAO,EAAE,MAAM,CAAC,CAAC,CAAC;IAEzC,MAAM,OAAO,GAAyB,CACpC,UAAU,CAAC,UAAU,CAAC,CAAC,EAAa,EAAE,EAAE,CAAC,EAAE,CAAC,OAAO,KAAK,KAAK,CAAC,EAAE,IAAI,EAAE,CAAC,OAAO,KAAK,SAAS,CAAC,GAAG,CAAC,CAClG,CAAC;IAEF,IAAI,CAAC,OAAO,EAAE;QACZ,OAAO;KACR;IAED,OAAO,CAAC,mBAAmB,EAAE,CAAC;IAE9B,IAAI,CAAC,UAAU,EAAE,EAAE;QACjB,GAAG,CAAC,yCAAyC,CAAC,CAAC;QAC/C,OAAO;KACR;IAED,MAAM,MAAM,GAAG,WAAW,CAAC,SAAS,EAAE,QAAQ,GAAG,wBAAwB,GAAG,GAAG,GAAG,yBAAyB,CAAC,CAAC;IAE7G,IAAI,MAAM,IAAI,YAAY,CAAC,EAAE,MAAM,EAAE,OAAO,EAAE,MAAM,EAAE,CAAC,CAAC,MAAM,KAAK,CAAC,EAAE;QACpE,IAAI,MAAM,EAAE;YACV,GAAG,CAAC,yDAAyD,MAAM,iBAAiB,CAAC,CAAC;YACtF,MAAM,UAAU,CAAC,MAAM,CAAC,CAAC;SAC1B;aAAM;YACL,IAAI,CAAC,+DAA+D,CAAC,CAAC;YACtE,KAAK,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC;SACpB;KACF;AACH,CAAC,CAAC","file":"../../../module/hooks/delete-token-hook.js","sourcesContent":["import { debug, log, warn } from '../../main';\nimport { amIFirstGm } from '../utils';\nimport { LootToken } from '../loot-token';\nimport { deleteItem, getLootToken, lootTokens } from '../mainEntry';\nimport { PICK_UP_STIX_ITEM_ID_FLAG, PICK_UP_STIX_MODULE_NAME } from '../settings';\n\nexport const deleteTokenHook = async (scene, tokenData, options, userId) => {\n  log(` deleteTokenHook:`);\n  log([scene, tokenData, options, userId]);\n\n  const removed: LootToken = <LootToken>(\n    lootTokens.findSplice((lt: LootToken) => lt.sceneId === scene.id && lt.tokenId === tokenData._id)\n  );\n\n  if (!removed) {\n    return;\n  }\n\n  removed.deactivateListeners();\n\n  if (!amIFirstGm()) {\n    log(` deleteTokenHook | User is not first GM`);\n    return;\n  }\n\n  const itemId = getProperty(tokenData, 'flags.' + PICK_UP_STIX_MODULE_NAME + '.' + PICK_UP_STIX_ITEM_ID_FLAG);\n\n  if (itemId && getLootToken({ itemId: removed?.itemId }).length === 0) {\n    if (itemId) {\n      log(` deleteTokenHook | No LootTokens left, deleting Item '${itemId}' for LootToken`);\n      await deleteItem(itemId);\n    } else {\n      warn(` deleteTokenHook | Item ID not found on TokenFlags for token:`);\n      debug([tokenData]);\n    }\n  }\n};\n"]}