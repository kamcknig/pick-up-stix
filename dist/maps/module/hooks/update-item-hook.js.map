{"version":3,"sources":["module/hooks/update-item-hook.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,GAAG,EAAE,sBAAmB;AACjC,OAAO,EAAE,UAAU,EAAE,oBAAiB;AAEtC,OAAO,EAAE,YAAY,EAAe,wBAAqB;AACzD,OAAO,EAAE,SAAS,EAAW,uBAAoB;AAEjD,MAAM,CAAC,MAAM,cAAc,GAAG,KAAK,EAAE,IAAI,EAAE,IAAI,EAAE,OAAO,EAAE,MAAM,EAAE,EAAE;IAClE,GAAG,CAAC,iBAAiB,CAAC,CAAC;IACvB,GAAG,CAAC,CAAC,IAAI,EAAE,IAAI,EAAE,OAAO,EAAE,MAAM,CAAC,CAAC,CAAC;IAEnC,MAAM,SAAS,GAAc,IAAI,CAAC,OAAO,CAAC,cAAc,EAAE,cAAc,CAAC,CAAC;IAC1E,GAAG,CAAC,8BAA8B,CAAC,CAAC;IACpC,GAAG,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC;IAEjB,IAAI,CAAC,UAAU,EAAE,EAAE;QACjB,GAAG,CAAC,kCAAkC,CAAC,CAAC;QACxC,OAAO;KACR;IAED,MAAM,UAAU,GAAgB,YAAY,CAAC,EAAE,MAAM,EAAE,IAAI,CAAC,EAAE,EAAE,CAAC,CAAC;IAElE,KAAK,IAAI,EAAE,IAAI,UAAU,EAAE;QACzB,IAAI,OAAO,GAA8B,EAAE,CAAC;QAC5C,MAAM,MAAM,GAA4B;YACtC,EAAE,EAAU,EAAE,CAAC,OAAO;YACtB,KAAK,EAAU,SAAS,EAAE,SAAS,EAAE,KAAK,IAAI,CAAC;YAC/C,MAAM,EAAU,SAAS,EAAE,SAAS,EAAE,MAAM,IAAI,CAAC;YACjD,IAAI,EAAU,IAAI,CAAC,IAAI,CAAC,IAAI;YAC5B,GAAG,EACD,SAAS,CAAC,SAAS,KAAK,SAAS;gBAC/B,CAAC,CAAC,EAAE,CAAC,MAAM;oBACT,CAAC,CAAS,SAAS,CAAC,SAAS,CAAC,aAAa;oBAC3C,CAAC,CAAS,SAAS,CAAC,SAAS,CAAC,cAAc;gBAC9C,CAAC,CAAS,IAAI,CAAC,IAAI,CAAC,GAAG;SAC5B,CAAC;QACF,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QACrB,IAAI,KAAK,GAAU,SAAS,EAAE,CAAC,MAAM,EAAE,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,CAAC;QACvD,KAAK,CAAC,QAAQ,CAAC,uBAAuB,CAAC,KAAK,CAAC,QAAQ,CAAC,YAAY,EAAE,OAAO,CAAC,CAAC;KAC9E;IACD,0CAA0C;AAC5C,CAAC,CAAC","file":"../../../module/hooks/update-item-hook.js","sourcesContent":["import { log } from '../../main';\nimport { amIFirstGm } from '../utils';\nimport { ItemFlags, LootToken } from '../loot-token';\nimport { getLootToken, updateToken } from '../mainEntry';\nimport { getCanvas, getGame } from '../settings';\n\nexport const updateItemHook = async (item, data, options, userId) => {\n  log(` updateItemHook`);\n  log([item, data, options, userId]);\n\n  const itemFlags: ItemFlags = item.getFlag('pick-up-stix', 'pick-up-stix');\n  log(` updateItemHook | itemFlags:`);\n  log([itemFlags]);\n\n  if (!amIFirstGm()) {\n    log(` updateItemHook | User is not GM`);\n    return;\n  }\n\n  const lootTokens = <LootToken[]>getLootToken({ itemId: item.id });\n\n  for (let lt of lootTokens) {\n    let updates: Record<string, unknown>[] = [];\n    const update: Record<string, unknown> = {\n      id: <string>lt.tokenId,\n      width: <number>itemFlags?.tokenData?.width ?? 1,\n      height: <number>itemFlags?.tokenData?.height ?? 1,\n      name: <string>item.data.name,\n      img:\n        itemFlags.container !== undefined\n          ? lt.isOpen\n            ? <string>itemFlags.container.imageOpenPath\n            : <string>itemFlags.container.imageClosePath\n          : <string>item.data.img,\n    };\n    updates.push(update);\n    let token = <Token>getCanvas().tokens?.get(lt.tokenId);\n    token.document.updateEmbeddedDocuments(token.document.documentName, updates);\n  }\n  // getCanvas().tokens?.updateAll(updates);\n};\n"]}