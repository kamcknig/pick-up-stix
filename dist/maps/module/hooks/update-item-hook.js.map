{"version":3,"sources":["module/hooks/update-item-hook.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,GAAG,EAAE,sBAAmB;AACjC,OAAO,EAAE,UAAU,EAAE,oBAAiB;AAEtC,OAAO,EAAE,YAAY,EAAe,wBAAqB;AACzD,OAAO,EAAE,SAAS,EAAW,uBAAoB;AAEjD,MAAM,CAAC,MAAM,cAAc,GAAG,KAAK,EAAE,IAAI,EAAE,IAAI,EAAE,OAAO,EAAE,MAAM,EAAE,EAAE;IAClE,GAAG,CAAC,iBAAiB,CAAC,CAAC;IACvB,GAAG,CAAC,CAAC,IAAI,EAAE,IAAI,EAAE,OAAO,EAAE,MAAM,CAAC,CAAC,CAAC;IAEnC,MAAM,SAAS,GAAc,IAAI,CAAC,OAAO,CAAC,cAAc,EAAE,cAAc,CAAC,CAAC;IAC1E,GAAG,CAAC,8BAA8B,CAAC,CAAC;IACpC,GAAG,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC;IAEjB,IAAI,CAAC,UAAU,EAAE,EAAE;QACjB,GAAG,CAAC,kCAAkC,CAAC,CAAC;QACxC,OAAO;KACR;IAED,MAAM,UAAU,GAAgB,YAAY,CAAC,EAAE,MAAM,EAAE,IAAI,CAAC,EAAE,EAAE,CAAC,CAAC;IAElE,KAAK,IAAI,EAAE,IAAI,UAAU,EAAE;QACzB,IAAI,OAAO,GAA6B,EAAE,CAAC;QAC3C,MAAM,MAAM,GACZ;YACE,EAAE,EAAU,EAAE,CAAC,OAAO;YACtB,KAAK,EAAU,SAAS,EAAE,SAAS,EAAE,KAAK,IAAI,CAAC;YAC/C,MAAM,EAAU,SAAS,EAAE,SAAS,EAAE,MAAM,IAAI,CAAC;YACjD,IAAI,EAAU,IAAI,CAAC,IAAI,CAAC,IAAI;YAC5B,GAAG,EAAE,SAAS,CAAC,SAAS,KAAK,SAAS;gBACpC,CAAC,CAAC,CAAC,EAAE,CAAC,MAAM;oBACV,CAAC,CAAS,SAAS,CAAC,SAAS,CAAC,aAAa;oBAC3C,CAAC,CAAS,SAAS,CAAC,SAAS,CAAC,cAAc,CAC7C;gBACD,CAAC,CAAS,IAAI,CAAC,IAAI,CAAC,GAAG;SAC1B,CAAC;QACF,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QACrB,IAAI,KAAK,GAAU,SAAS,EAAE,CAAC,MAAM,EAAE,GAAG,CAAE,EAAE,CAAC,OAAO,CAAC,CAAC;QACxD,KAAK,CAAC,QAAQ,CAAC,uBAAuB,CAAC,KAAK,CAAC,QAAQ,CAAC,YAAY,EAAE,OAAO,CAAC,CAAA;KAC7E;IACD,0CAA0C;AAC5C,CAAC,CAAA","file":"../../../module/hooks/update-item-hook.js","sourcesContent":["import { log } from '../../main';\r\nimport { amIFirstGm } from \"../utils\";\r\nimport { ItemFlags, LootToken } from \"../loot-token\";\r\nimport { getLootToken, updateToken } from \"../mainEntry\";\r\nimport { getCanvas, getGame } from '../settings';\r\n\r\nexport const updateItemHook = async (item, data, options, userId) => {\r\n  log(` updateItemHook`);\r\n  log([item, data, options, userId]);\r\n\r\n  const itemFlags: ItemFlags = item.getFlag('pick-up-stix', 'pick-up-stix');\r\n  log(` updateItemHook | itemFlags:`);\r\n  log([itemFlags]);\r\n\r\n  if (!amIFirstGm()) {\r\n    log(` updateItemHook | User is not GM`);\r\n    return;\r\n  }\r\n\r\n  const lootTokens = <LootToken[]>getLootToken({ itemId: item.id });\r\n \r\n  for (let lt of lootTokens) { \r\n    let updates:Record<string, unknown>[] = [];\r\n    const update:Record<string, unknown> = \r\n    {\r\n      id: <string>lt.tokenId,\r\n      width: <number>itemFlags?.tokenData?.width ?? 1,\r\n      height: <number>itemFlags?.tokenData?.height ?? 1,\r\n      name: <string>item.data.name,\r\n      img: itemFlags.container !== undefined\r\n        ? (lt.isOpen\r\n          ? <string>itemFlags.container.imageOpenPath\r\n          : <string>itemFlags.container.imageClosePath\r\n        )\r\n        : <string>item.data.img\r\n    };\r\n    updates.push(update);\r\n    let token = <Token>getCanvas().tokens?.get( lt.tokenId);\r\n    token.document.updateEmbeddedDocuments(token.document.documentName, updates)\r\n  }\r\n  // getCanvas().tokens?.updateAll(updates);\r\n}\r\n"]}