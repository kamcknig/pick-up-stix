{"version":3,"sources":["module/libs/ImagePicker.ts"],"names":[],"mappings":"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","file":"../../../module/libs/ImagePicker.js","sourcesContent":["import DirectoryPicker from \"./DirectoryPicker\";\r\n\r\n/**\r\n * Game Settings: ImagePicker\r\n * @href https://github.com/MrPrimate/vtta-tokenizer/blob/master/src/libs/ImagePicker.js\r\n */\r\n class ImagePicker extends FilePicker {\r\n    constructor(options = {}) {\r\n      super({});\r\n      const path = options;\r\n      const activeSource = this.activeSource;\r\n      const bucket = null;\r\n      //@ts-ignore\r\n      this.field = {};\r\n      //@ts-ignore\r\n      this.field.value = {};\r\n      //@ts-ignore\r\n      this.field.value = ImagePicker.format({\r\n        activeSource,\r\n        bucket,\r\n        path,\r\n      });\r\n    }\r\n  \r\n    _onSubmit(event) {\r\n      event.preventDefault();\r\n      const path = event.target.file.value;\r\n      const activeSource = this.activeSource;\r\n      const bucket = event.target.bucket ? event.target.bucket.value : null;\r\n      //@ts-ignore\r\n      this.field.value = ImagePicker.format({\r\n        activeSource,\r\n        bucket,\r\n        path,\r\n      });\r\n      this.close();\r\n    }\r\n  \r\n    static async uploadToPath(path, file) {\r\n      const options = DirectoryPicker.parse(path);\r\n      return FilePicker.upload(options.activeSource, options.current, file, { bucket: options.bucket });\r\n    }\r\n  \r\n    // returns the type \"Img\" for rendering the SettingsConfig\r\n    static Img(val) {\r\n      return val == null ?  '' : String(val);\r\n    }\r\n  \r\n    // formats the data into a string for saving it as a GameSetting\r\n    static format(value) {\r\n      return value.bucket !== null\r\n        ? `[${value.activeSource}:${value.bucket}] ${value.path}`\r\n        : `[${value.activeSource}] ${value.path}`;\r\n    }\r\n  \r\n    // parses the string back to something the FilePicker can understand as an option\r\n    static parse(inStr) {\r\n      const str = inStr ?? ''\r\n      let matches = str.match(/\\[(.+)\\]\\s*(.+)?/u);\r\n      if (matches) {\r\n        let [,source, current = ''] = matches;\r\n        current = current.trim();\r\n        const [s3, bucket] = source.split(\":\");\r\n        if (bucket !== undefined) {\r\n          return {\r\n            activeSource: s3,\r\n            bucket: bucket,\r\n            current: current,\r\n          };\r\n        } else {\r\n          return {\r\n            activeSource: s3,\r\n            bucket: null,\r\n            current: current,\r\n          };\r\n        }\r\n      }\r\n      // failsave, try it at least\r\n      return {\r\n        activeSource: \"data\",\r\n        bucket: null,\r\n        current: str,\r\n      };\r\n    }\r\n  \r\n    // Adds a FilePicker-Simulator-Button next to the input fields\r\n    static processHtml(html) {\r\n      $(html)\r\n        .find(`input[data-dtype=\"Img\"]`)\r\n        .each(function () {\r\n          if (!$(this).next().length) {\r\n            let picker = new ImagePicker({\r\n              field: $(this)[0],\r\n              //@ts-ignore\r\n              ...ImagePicker.parse(this.value),\r\n            });\r\n            // data-type=\"image\" data-target=\"img\"\r\n            let pickerButton = $(\r\n              '<button type=\"button\" class=\"file-picker\" title=\"Pick image\"><i class=\"fas fa-file-import fa-fw\"></i></button>'\r\n            );\r\n            pickerButton.on(\"click\", function () {\r\n              picker.render(true);\r\n            });\r\n            $(this).parent().append(pickerButton);\r\n          }\r\n        });\r\n    }\r\n  \r\n    /** @override */\r\n    activateListeners(html) {\r\n      super.activateListeners(html);\r\n  \r\n      // remove unnecessary elements\r\n      $(html).find(\"footer button\").text(\"Select Image\");\r\n    }\r\n  }\r\n  \r\n  Hooks.on(\"renderSettingsConfig\", (app, html, user) => {\r\n    ImagePicker.processHtml(html);\r\n  });\r\n  \r\n  export default ImagePicker;"]}