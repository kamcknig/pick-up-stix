{"version":3,"sources":["module/mainEntry.ts"],"names":[],"mappings":"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","file":"../../module/mainEntry.js","sourcesContent":["import { log } from '../main';\nimport {\n  collidedTokens,\n  getActorCurrencyPath,\n  getCurrencyTypes,\n  getPriceDataPath,\n  getQuantityDataPath,\n  getWeightDataPath,\n  initiateRecord,\n} from './utils';\nimport { ContainerData, ContainerLoot, ItemData, ItemFlags, LootToken, TokenData, TokenFlags } from './loot-token';\nimport { DropData, ItemType, PickUpStixHooks, SocketMessage, SocketMessageType } from './models';\nimport {\n  getCanvas,\n  getGame,\n  gmActionTimeout,\n  PICK_UP_STIX_FLAG,\n  PICK_UP_STIX_MODULE_NAME,\n  PICK_UP_STIX_SOCKET,\n  SettingKeys,\n} from './settings';\n\nexport const lootTokens: LootToken[] = [];\nwindow['lootTokens'] = lootTokens;\n\nexport type CreateLootToken = {\n  (tokenData: string, itemData: string, notify?: boolean): Promise<LootToken>;\n  (tokenData: TokenData, itemData: string, notify?: boolean): Promise<LootToken>;\n  (tokenData: TokenData, itemData: ItemData, notify?: boolean): Promise<LootToken>;\n};\n\nexport const getLootToken = (options: { itemId?: string; tokenId?: string; sceneId?: string }): LootToken[] => {\n  if (!options.itemId && !options.tokenId && !options.sceneId) {\n    throw new Error('Must provide itemId, tokenId or sceneId');\n  }\n\n  return lootTokens.filter((lt) => {\n    if (options.itemId && options.itemId !== lt.itemId) {\n      return false;\n    }\n\n    if (options.sceneId && options.sceneId !== lt.sceneId) {\n      return false;\n    }\n\n    if (options.tokenId && options.tokenId !== lt.tokenId) {\n      return false;\n    }\n\n    return true;\n  });\n};\n\n/**\n * @param data Either a Token or a Token ID\n */\nexport const getValidControlledTokens = (data: string | Token): Token[] => {\n  log(` getValidControlledTokens:`);\n  log([data]);\n\n  let token: Token;\n\n  if (typeof data === 'string') {\n    token = <Token>getCanvas().tokens?.placeables.find((p) => p.id === data);\n  } else {\n    token = data;\n  }\n\n  if (!token) {\n    log(` getValidControlledTokens | no token provided so returning nothing`);\n    return [];\n  }\n\n  log(` getValidControlledTokens | Looking for tokens near '${token.id}' '${token.name}`);\n\n  log(` getValidControlledTokens | looping through currently controlled tokens`);\n  log([getCanvas().tokens?.controlled]);\n\n  const controlled = <Token[]>getCanvas().tokens?.controlled.filter((t) => {\n    if (!t.actor) {\n      log(` getValidControlledTokens | token '${t.id}' '${t.name}' has no actor, skipping`);\n      return false;\n    }\n\n    return (\n      t.x + t.w > token.x - <number>getCanvas().grid?.size &&\n      t.x < token.x + token.w + <number>getCanvas().grid?.size &&\n      t.y + t.h > token.y - <number>getCanvas().grid?.size &&\n      t.y < token.y + token.h + <number>getCanvas().grid?.size\n    );\n  });\n\n  log(` getValidControlledTokens | controlled tokens within range`);\n  log([controlled]);\n  return controlled;\n};\n\nexport const normalizeDropData = async (data: Partial<DropData>): Promise<DropData> => {\n  log('pick-up-stix | normalizeDropData called with args:');\n  log([data]);\n\n  if (data.actorId) {\n    data.actor = data.tokenId ? getGame().actors?.tokens[data.tokenId] : getGame().actors?.get(data.actorId);\n  }\n\n  const pack: any = data.pack ? getGame().packs.get(data.pack) : null;\n  const id: string = <string>data.id;\n  data.data = data.actor ? data.data : pack ? (await pack.getEntity(id))?.data : getGame().items?.get(id)?.data;\n\n  // if it's not a container, then we can assume it's an item. Create the item token\n  const hg = <number>getCanvas().dimensions?.size * 0.5;\n  const { x, y } = <any>getCanvas().grid?.getSnappedPosition(<number>data.x - hg, <number>data.y - hg, 1);\n  data.gridX = x;\n  data.gridY = y;\n\n  return data as DropData;\n};\n\n/**\n * Handles data dropped onto the getCanvas().\n *\n * @param dropData\n */\nexport async function handleItemDropped(dropData: DropData): Promise<boolean> {\n  log(` handleItemDropped | called with args:`);\n  log(dropData);\n\n  // The data here should already be normalized, meaning that if we were able to determine the actor reference,\n  // it should exist here. So if we have an actor ID but no actor, that means we weren't able to figure out\n  // which actor this item might have come from.\n  if (dropData.actorId && !dropData.actor) {\n    ui.notifications?.error(\n      `Please ensure you are only controlling the token (and only the one token) for the character you're working with.`,\n    );\n    return false;\n  }\n\n  // loop through placeables on the map and see if it's being dropped onto a token\n  const targetTokens = collidedTokens({ x: dropData.x, y: dropData.y });\n\n  if (targetTokens.length > 1) {\n    ui.notifications?.error('You can drop an item onto one and only one target');\n    return false;\n  }\n\n  const targetToken = targetTokens?.[0];\n\n  return targetToken ? dropItemOnToken({ targetTokenId: targetToken.id, dropData }) : dropItemOnCanvas({ dropData });\n}\n\nconst dropItemOnCanvas = async ({ dropData }) => {\n  log(` dropItemOnCanvas:`);\n  log([dropData]);\n\n  let itemData: any = duplicate(dropData.data);\n  let lootTokens: LootToken[] = getLootToken({ itemId: itemData._id });\n\n  let tokenData: TokenData = mergeObject(\n    {\n      name: itemData.name,\n      disposition: 0,\n      img: itemData.img,\n      width: 1,\n      height: 1,\n      x: dropData.gridX,\n      y: dropData.gridY,\n      flags: {\n        'pick-up-stix': {\n          'pick-up-stix': {\n            isOpen: false,\n          },\n        },\n      },\n    },\n    {\n      ...(itemData.flags?.[PICK_UP_STIX_MODULE_NAME]?.[PICK_UP_STIX_FLAG]?.tokenData ?? {}),\n    },\n  );\n\n  mergeObject(itemData, {\n    flags: {\n      'pick-up-stix': {\n        'pick-up-stix': {\n          tokenData: {\n            width: itemData.flags?.[PICK_UP_STIX_MODULE_NAME]?.[PICK_UP_STIX_FLAG]?.tokenData?.width ?? 1,\n            height: itemData.flags?.[PICK_UP_STIX_MODULE_NAME]?.[PICK_UP_STIX_FLAG]?.tokenData?.height ?? 1,\n          },\n        },\n      },\n    },\n  });\n\n  const droppedItemFlags: ItemFlags = getProperty(\n    itemData,\n    'flags.' + PICK_UP_STIX_MODULE_NAME + '.' + PICK_UP_STIX_FLAG,\n  );\n\n  // if the item being dropped is a container, just create the empty container\n  if (droppedItemFlags?.itemType === ItemType.CONTAINER) {\n    log(` dropItemOnCanvas | dropped item is a container`);\n    const img: string = <string>droppedItemFlags?.container?.imageClosePath;\n\n    return lootTokens.length > 0\n      ? !!(await createLootToken(tokenData, lootTokens[0].itemId))\n      : !!(await createLootToken(tokenData, {\n          _id: itemData._id,\n          name: itemData.name,\n          img,\n          folder: getGame().settings.get('pick-up-stix', SettingKeys.tokenFolderId),\n          type: ItemType.CONTAINER,\n          flags: {\n            'pick-up-stix': {\n              'pick-up-stix': {\n                ...droppedItemFlags,\n              },\n            },\n          },\n        } as ItemData));\n  }\n\n  log(` dropItemOnCanvas | Dropped item is not a container`);\n\n  // if we don't have any loot tokens already associated with the item, we'll create a new\n  // loot token\n  if (!dropData.actor) {\n    log(` dropItemOnCanvas | Dropped item comes from an actor`);\n\n    if (lootTokens.length === 0) {\n      log(` dropItemOnCanvas | No LootTokens for the dropped item currently`);\n      const lootType = await chooseLootTokenType();\n\n      if (lootType === ItemType.ITEM) {\n        return !!(await createLootToken(\n          tokenData,\n          <ItemData>mergeObject(itemData, {\n            flags: {\n              'pick-up-stix': {\n                'pick-up-stix': {\n                  itemType: ItemType.ITEM,\n                },\n              },\n            },\n          }),\n        ));\n      } else if (lootType === ItemType.CONTAINER) {\n        const img: string = <string>getGame().settings.get(PICK_UP_STIX_MODULE_NAME, SettingKeys.closeImagePath);\n\n        return !!(await createLootToken({ ...tokenData, img }, {\n          name: 'Empty Container',\n          img,\n          type: ItemType.CONTAINER,\n          flags: {\n            'pick-up-stix': {\n              'pick-up-stix': {\n                tokenData: mergeObject(\n                  {\n                    disposition: 0,\n                    width: itemData.flags?.[PICK_UP_STIX_MODULE_NAME]?.[PICK_UP_STIX_FLAG]?.tokenData?.width ?? 1,\n                    height: itemData.flags?.[PICK_UP_STIX_MODULE_NAME]?.[PICK_UP_STIX_FLAG]?.tokenData?.height ?? 1,\n                    name: 'Empty Container',\n                    img,\n                  },\n                  { ...tokenData, img },\n                ),\n                itemType: ItemType.CONTAINER,\n                container: {\n                  currency: Object.keys(getCurrencyTypes()).reduce(\n                    (acc, shortName) => ({ ...acc, [shortName]: 0 }),\n                    {},\n                  ),\n                  imageClosePath: img,\n                  imageOpenPath: getGame().settings.get(PICK_UP_STIX_MODULE_NAME, SettingKeys.openImagePath),\n                  soundOpenPath: getGame().settings.get(\n                    PICK_UP_STIX_MODULE_NAME,\n                    SettingKeys.defaultContainerOpenSound,\n                  ),\n                  soundClosePath: getGame().settings.get(\n                    PICK_UP_STIX_MODULE_NAME,\n                    SettingKeys.defaultContainerCloseSound,\n                  ),\n                  loot: getGame().settings.get(PICK_UP_STIX_MODULE_NAME, SettingKeys.addItemOnContainerCreation)\n                    ? {\n                        [itemData.type]: [\n                          mergeObject(itemData, {\n                            ...expandObject({\n                              data: {\n                                [getQuantityDataPath()]: 1,\n                              },\n                            }),\n                          }),\n                        ],\n                      }\n                    : null,\n                },\n              },\n            },\n          },\n        } as ItemData));\n      }\n    } else {\n      log(` dropItemOnCanvas | LootTokens for the dropped item already exist, create new token with same item data`);\n      // we already have loot tokens, so create a new loot token but use the previous item ID\n      return !!(await createLootToken({ ...tokenData }, itemData._id));\n    }\n  }\n\n  log(` dropItemOnCanvas | Dropped data comes from actor '${dropData.actor.name}', delete it first`);\n  await deleteOwnedItem(dropData.actor.id, itemData._id);\n\n  return !!(await createLootToken(\n    { ...tokenData },\n    <ItemData>mergeObject(itemData, {\n      flags: {\n        'pick-up-stix': {\n          'pick-up-stix': {\n            itemType: ItemType.ITEM,\n          },\n        },\n      },\n    }),\n  ));\n};\n\n/**\n * Api for creating a container with specified items inside at desired position\n * @param items array of items\n * @param currency obect like {cp:0, sp:0, gp:0, pp:0}\n * @param position object like {gridX:0, gridY:0}\n * @param tokenDataOverride available values to override are width, height , closeImg, openImg\n */\nexport const makeContainerApi = async (\n  items,\n  currency,\n  position,\n  tokenDataOverride = { width: 1, height: 1, closeImg: '', openImg: '' },\n) => {\n  log(` makeContainerApi:`);\n  log([items, currency, position]);\n\n  let lootData = {};\n\n  items.forEach((item) => {\n    mergeObject(item, {\n      flags: {\n        'pick-up-stix': {\n          'pick-up-stix': {\n            tokenData: {\n              width: 1,\n              height: 1,\n            },\n          },\n        },\n      },\n    });\n\n    if (lootData[item.data.type]) {\n      lootData[item.data.type].push(item.data);\n    } else {\n      lootData[item.data.type] = [item.data];\n    }\n  });\n\n  let tokenData: TokenData = {\n    name: 'Container',\n    disposition: 0,\n    img: '',\n    width: tokenDataOverride.width,\n    height: tokenDataOverride.height,\n    x: position.gridX,\n    y: position.gridY,\n    flags: {\n      'pick-up-stix': {\n        'pick-up-stix': {\n          isOpen: false,\n          minPerceiveValue: 0,\n        },\n      },\n    },\n  };\n\n  const img: string =\n    <string>tokenDataOverride?.closeImg ||\n    <string>getGame().settings.get(PICK_UP_STIX_MODULE_NAME, SettingKeys.closeImagePath);\n\n  return !!(await createLootToken({ ...tokenData, img }, {\n    name: 'Container',\n    img,\n    type: ItemType.CONTAINER,\n    flags: {\n      'pick-up-stix': {\n        'pick-up-stix': {\n          tokenData: mergeObject(\n            {\n              disposition: 0,\n              width: 1,\n              height: 1,\n              name: 'Container',\n              img,\n            },\n            { ...tokenData, img },\n          ),\n          itemType: ItemType.CONTAINER,\n          container: {\n            currency: Object.keys(getCurrencyTypes()).reduce(\n              (acc, shortName) => ({\n                ...acc,\n                [shortName]: currency[shortName] || 0,\n              }),\n              {},\n            ),\n            imageClosePath: img,\n            imageOpenPath:\n              tokenDataOverride.openImg || getGame().settings.get(PICK_UP_STIX_MODULE_NAME, SettingKeys.openImagePath),\n            soundOpenPath: getGame().settings.get(PICK_UP_STIX_MODULE_NAME, SettingKeys.defaultContainerOpenSound),\n            soundClosePath: getGame().settings.get(PICK_UP_STIX_MODULE_NAME, SettingKeys.defaultContainerCloseSound),\n            loot: lootData,\n          },\n        },\n      },\n    },\n  } as ItemData));\n};\n\nconst chooseLootTokenType = (): Promise<ItemType> => {\n  log(` chooseLootTokenType | creating dialog`);\n  return new Promise((resolve) => {\n    // render the item type selection form\n    new Dialog({\n      content: 'What kind of loot is this?',\n      default: 'one',\n      title: 'Loot Type',\n      buttons: {\n        one: {\n          icon: '<i class=\"fas fa-box\"></i>',\n          label: 'Item',\n          callback: async () => {\n            log(` chooseLootTokenType | '${ItemType.ITEM}' type chosen`);\n            resolve(ItemType.ITEM);\n          },\n        },\n        two: {\n          icon: '<i class=\"fas fa-boxes\"></i>',\n          label: 'Container',\n          callback: async () => {\n            log(` chooseLootTokenType | '${ItemType.CONTAINER}' type chosen`);\n            resolve(ItemType.CONTAINER);\n          },\n        },\n      },\n    }).render(true);\n  });\n};\n\nexport const createLootToken: CreateLootToken = async (tokenData: any, itemData: any, notify: boolean = true) => {\n  log(` createLootToken:`);\n  log([tokenData, itemData, notify]);\n\n  if (getGame().user?.isGM) {\n    if (typeof itemData === 'object') {\n      itemData = await createItem({\n        ...itemData,\n        permission: {\n          default: 2,\n        },\n        folder: getGame().settings.get('pick-up-stix', SettingKeys.tokenFolderId),\n      });\n    }\n\n    if (typeof tokenData === 'object') {\n      tokenData = await createToken({\n        ...tokenData,\n        flags: {\n          'pick-up-stix': {\n            'pick-up-stix': {\n              itemId: itemData,\n            },\n          },\n        },\n      });\n    }\n  }\n\n  const t = new LootToken(tokenData, itemData);\n  lootTokens.push(t);\n\n  if (notify) {\n    const msg: SocketMessage = {\n      sender: <string>getGame().user?.id,\n      type: SocketMessageType.lootTokenCreated,\n      data: {\n        tokenId: tokenData,\n      },\n    };\n    getGame().socket?.emit(PICK_UP_STIX_SOCKET, msg);\n    Hooks.callAll(PickUpStixHooks.lootTokenCreated, msg.data.tokenId);\n  }\n\n  return t;\n};\n\nexport const deleteToken = async (tokenId: string, sceneId: string): Promise<string> => {\n  log(` deleteToken with args:`);\n  log([tokenId, sceneId]);\n\n  if (getGame().user?.isGM) {\n    log(` deleteToken | user is GM, deleting token '${tokenId}' from scene '${sceneId}'`);\n    const scene = getGame().scenes?.get(sceneId); //Scene.collection.get(sceneId);\n    let array = [tokenId];\n    //@ts-ignore\n    const _id = <string>(<Document<any, any>[]>await scene?.deleteEmbeddedDocuments('Token', array))[0].id;\n    return _id;\n  }\n\n  return new Promise((resolve) => {\n    const timeout = setTimeout(() => {\n      resolve('');\n    }, gmActionTimeout());\n\n    const msg: SocketMessage = {\n      sender: <string>getGame().user?.id,\n      type: SocketMessageType.deleteToken,\n      data: {\n        tokenId,\n        sceneId,\n      },\n    };\n\n    Hooks.once('deleteToken', (scene, data, options, userId) => {\n      log(` deleteToken | deleteToken hook`);\n      clearTimeout(timeout);\n      resolve(data._id);\n    });\n\n    log(` deleteToken | user is not GM, sending socket msg:`);\n    log([msg]);\n    getGame().socket?.emit(PICK_UP_STIX_SOCKET, msg);\n  });\n};\n\nexport async function updateToken(\n  sceneId: string,\n  updates: { _id: string; [key: string]: any } | { _id: string; [key: string]: any }[],\n): Promise<{ tokenId: string; sceneId: string }> {\n  log(` updateToken with args:`);\n  log([sceneId, updates]);\n\n  if (getGame().user?.isGM) {\n    log(` updateToken | user is GM, making update`);\n    const scene = getGame().scenes?.get(sceneId); //Scene.collection.get(sceneId);\n    let record: Record<string, unknown> = initiateRecord<unknown>(updates, null);\n    let array = [record];\n    //@ts-ignore\n    const _id = <string>(<Document<any, any>[]>await scene?.updateEmbeddedDocuments('Token', array))[0].id;\n    return { tokenId: _id, sceneId: sceneId };\n  }\n\n  const msg: SocketMessage = {\n    sender: <string>getGame().user?.id,\n    type: SocketMessageType.updateToken,\n    data: {\n      sceneId,\n      updates,\n    },\n  };\n\n  return new Promise((resolve) => {\n    const timeout = setTimeout(() => {\n      resolve({ tokenId: '', sceneId: '' });\n    }, gmActionTimeout());\n\n    Hooks.once('updateToken', (scene, tokenData, options, userId) => {\n      log(` updateToken | updateToken hook`);\n      clearTimeout(timeout);\n      resolve({ tokenId: tokenData._id, sceneId: sceneId });\n    });\n\n    log(` updateToken | user is not GM, sending socket msg:`);\n    log([msg]);\n\n    getGame().socket?.emit(PICK_UP_STIX_SOCKET, msg);\n  });\n}\n\nexport async function updateItem(id, updates): Promise<string> {\n  log(` updateItem:`);\n  log([id, updates]);\n\n  if (getGame().user?.isGM) {\n    log(' updateItem | user is GM, making update');\n    const entity = <Item>getGame().items?.get(id);\n    const _id = <string>(await entity.update(updates, {}))?.id;\n    return _id;\n  }\n\n  return new Promise((resolve) => {\n    const timeout = setTimeout(() => {\n      resolve('');\n    }, gmActionTimeout());\n\n    const msg: SocketMessage = {\n      sender: <string>getGame().user?.id,\n      type: SocketMessageType.updateItem,\n      data: {\n        id,\n        updates,\n      },\n    };\n\n    Hooks.once('updateItem', (entity, data, options, userId) => {\n      log(` updateItem | updateItem hook`);\n      clearTimeout(timeout);\n      resolve(entity.id);\n    });\n\n    log(` updateItem | user is not GM, sending socket msg:`);\n    log([msg]);\n\n    getGame().socket?.emit(PICK_UP_STIX_SOCKET, msg);\n  });\n}\n\nexport async function updateActor(actor: Actor, updates): Promise<string> {\n  log(' updateActor | called with args:');\n  log([actor, updates]);\n\n  if (getGame().user?.isGM) {\n    log(` updateActor | user is GM, udating actor`);\n    const _id = <string>(await actor.update(updates))?.id;\n    return _id;\n  }\n\n  return new Promise((resolve) => {\n    const timeout = setTimeout(() => {\n      resolve('');\n    }, gmActionTimeout());\n\n    const msg: SocketMessage = {\n      sender: <string>getGame().user?.id,\n      type: SocketMessageType.updateActor,\n      data: {\n        actorId: actor.id,\n        updates,\n      },\n    };\n\n    Hooks.once('updateActor', (actor, data, options, userId) => {\n      log(` updateActor | updateActor hook`);\n      clearTimeout(timeout);\n      resolve(actor.id);\n    });\n\n    log(` updateActor | user is not GM, sending socket msg:`);\n    log([msg]);\n\n    getGame().socket?.emit(PICK_UP_STIX_SOCKET, msg);\n  });\n}\n\nexport async function createOwnedItem(actorId: string, data: any | any[]): Promise<boolean> {\n  log('pick-up-stix | createOwnedItem | called with args:');\n  data = Array.isArray(data) ? data : [data];\n  log([actorId, data]);\n\n  const actor = getGame().actors?.get(actorId);\n\n  if (getGame().user?.isGM) {\n    log(` createOwnedItem | user is GM, creating owned item`);\n    await actor?.createEmbeddedDocuments(data);\n    return true;\n  }\n\n  return new Promise((resolve) => {\n    const timeout = setTimeout(() => {\n      resolve(false);\n    }, gmActionTimeout());\n\n    const msg: SocketMessage = {\n      sender: <string>getGame().user?.id,\n      type: SocketMessageType.createOwnedItem,\n      data: {\n        actorId,\n        items: data,\n      },\n    };\n\n    Hooks.once('createOwnedItem', (actor, item, options, userId) => {\n      log(` createOwnedItem | createOwnedItem hook | item '${item._id}' created`);\n      clearTimeout(timeout);\n      resolve(true);\n    });\n\n    log(` createOwnedItem | user is not GM, sending socket msg:`);\n    log([msg]);\n\n    getGame().socket?.emit(PICK_UP_STIX_SOCKET, msg);\n  });\n}\n\n/**\n *\n * @param data\n * @param options\n *\n * @returns The ID of the Item entity created or null if it was not created\n */\nexport const createItem = async (data: any, options: any = {}): Promise<string> => {\n  log(` createItem | called with args:`);\n  log([data]);\n\n  if (getGame().user?.isGM) {\n    log(` createItem | user is GM, creating entity`);\n    const e = <Item>await Item.create(data, options);\n    return <string>e.id;\n  }\n\n  return new Promise((resolve) => {\n    const timeout = setTimeout(() => {\n      resolve('');\n    }, gmActionTimeout());\n\n    const msg: SocketMessage = {\n      sender: <string>getGame().user?.id,\n      type: SocketMessageType.createItem,\n      data: {\n        data,\n        options,\n      },\n    };\n\n    Hooks.once('createItem', (item, options, userId) => {\n      log(` createItem | createItem hook | item '${item.id}' created`);\n      clearTimeout(timeout);\n      resolve(item.id);\n    });\n\n    log(` createItem | user is not GM, sending socket msg:`);\n    log([msg]);\n\n    getGame().socket?.emit(PICK_UP_STIX_SOCKET, msg);\n  });\n};\n\nexport const deleteOwnedItem = async (\n  actorId: string,\n  itemId: string,\n): Promise<{ actorId: string; itemId: string }> => {\n  log(' deleteOwnedItem | called with args:');\n  log([actorId, itemId]);\n\n  if (getGame().user?.isGM) {\n    log(` deleteOwnedItem | user is GM, deleting owned item`);\n    const actor = getGame().actors?.get(actorId);\n    await actor?.deleteEmbeddedDocuments(actor.documentName, [itemId]);\n    return { actorId, itemId };\n  }\n\n  const msg: SocketMessage = {\n    sender: <string>getGame().user?.id,\n    type: SocketMessageType.deleteOwnedItem,\n    data: {\n      actorId,\n      itemId,\n    },\n  };\n\n  return new Promise((resolve) => {\n    const timeout = setTimeout(() => {\n      resolve({ actorId: '', itemId: '' });\n    }, gmActionTimeout());\n\n    Hooks.once('deleteOwnedItem', (actor, itemData, options, userId) => {\n      log(' deleteOwnedItem | deleteOwnedItem hook');\n      clearTimeout(timeout);\n      resolve({ actorId, itemId });\n    });\n\n    log(' deleteOwnedItem | user is not GM, sending socket msg:');\n    log([msg]);\n\n    getGame().socket?.emit(PICK_UP_STIX_SOCKET, msg);\n  });\n};\n\nexport const deleteItem = async (id: string): Promise<string | null> => {\n  log(' deleteItem | called with args:');\n  log([id]);\n\n  const e = getGame().items?.get(id);\n\n  if (!e) {\n    log(` deleteItem | Item '${id}' not found`);\n    return null;\n  }\n\n  if (getGame().user?.isGM) {\n    log(` deleteItem | user is GM, deleting entity`);\n    await e.delete();\n    return id;\n  }\n\n  const msg: SocketMessage = {\n    sender: <string>getGame().user?.id,\n    type: SocketMessageType.deleteItem,\n    data: {\n      id,\n    },\n  };\n\n  return new Promise((resolve) => {\n    const timeout = setTimeout(() => {\n      resolve(null);\n    }, gmActionTimeout());\n\n    Hooks.once('deleteItem', (item, options, userId) => {\n      log(' deleteItem | deleteItem hook');\n      clearTimeout(timeout);\n      resolve(item.id);\n    });\n\n    log(` deleteItem | user is not GM, sending socket msg:`);\n    log([msg]);\n\n    getGame().socket?.emit(PICK_UP_STIX_SOCKET, msg);\n  });\n};\n\nexport const updateOwnedItem = async (actorId, data): Promise<{ actorId: string; id: string } | null> => {\n  log(' updateOwnedItem | called with args:');\n  log([actorId, data]);\n\n  const actor = getGame().actors?.get(actorId);\n\n  if (!actor) {\n    log(` updateOwnedItem | Actor '${actorId}' not found`);\n    return null;\n  }\n\n  if (getGame().user?.isGM) {\n    log(` updateOwnedItem | user is GM, updating embedded entity`);\n    //@ts-ignore\n    const _id = <string>(<Document<any, any>[]>await actor.updateEmbeddedDocuments(data))[0].id;\n    return { actorId: <string>actor.id, id: _id };\n  }\n\n  const msg: SocketMessage = {\n    sender: <string>getGame().user?.id,\n    type: SocketMessageType.updateOwnedItem,\n    data: {\n      actorId,\n      data,\n    },\n  };\n\n  return new Promise((resolve) => {\n    const timeout = setTimeout(() => {\n      resolve(null);\n    }, gmActionTimeout());\n\n    Hooks.once(`updateOwnedItem`, (parent, data, update, options, userId) => {\n      log(` updateOwnedItem | updateOwnedItem hook`);\n      clearTimeout(timeout);\n      resolve({ actorId: parent.id, id: data._id });\n    });\n\n    log(' updateOwnedItem | user is not GM, sending socket msg');\n    log([msg]);\n\n    getGame().socket?.emit(PICK_UP_STIX_SOCKET, msg);\n  });\n};\n\nexport const createToken = async (data: any): Promise<string> => {\n  log(` createToken | called with args:`);\n  log([data]);\n\n  if (getGame().user?.isGM) {\n    log(` createToken | user is GM, creating token`);\n    const t = await Token.create({\n      ...data,\n    });\n    return <string>t[0].id;\n  }\n\n  const msg: SocketMessage = {\n    sender: <string>getGame().user?.id,\n    type: SocketMessageType.createToken,\n    data,\n  };\n\n  return new Promise((resolve) => {\n    const timeout = setTimeout(() => {\n      resolve('');\n    }, gmActionTimeout());\n\n    Hooks.once('createToken', (scene, data) => {\n      log(` createToken | createToken hook | Token '${data.id}' created`);\n      clearTimeout(timeout);\n      resolve(data._id);\n    });\n\n    log(' createToken | user is not GM, sending socket msg:');\n    log([msg]);\n\n    getGame().socket?.emit(PICK_UP_STIX_SOCKET, msg);\n  });\n};\n\nexport const dropItemOnToken = async ({\n  dropData,\n  targetTokenId,\n}: {\n  dropData: DropData;\n  targetTokenId: string;\n}): Promise<boolean> => {\n  log(` dropItemOnToken:`);\n  log([dropData, targetTokenId]);\n\n  if (!getGame().user?.isGM) {\n    return new Promise((resolve) => {\n      const timeout = setTimeout(() => {\n        resolve(false);\n      }, gmActionTimeout());\n\n      const msg: SocketMessage = {\n        type: SocketMessageType.dropItemOnToken,\n        sender: <string>getGame().user?.id,\n        data: {\n          dropData,\n          targetTokenId,\n        },\n      };\n\n      getGame().socket?.emit(PICK_UP_STIX_SOCKET, msg);\n    });\n  }\n\n  const targetToken: Token = <Token>getCanvas().tokens?.placeables.find((p) => p.id === targetTokenId);\n  const targetTokenFlags: TokenFlags = <TokenFlags>targetToken.getFlag(PICK_UP_STIX_MODULE_NAME, PICK_UP_STIX_FLAG);\n  const targetTokenItem = getGame().items?.get(<string>targetTokenFlags?.itemId);\n  const targetTokenItemFlags: ItemFlags = <ItemFlags>(\n    targetTokenItem?.getFlag(PICK_UP_STIX_MODULE_NAME, PICK_UP_STIX_FLAG)\n  );\n\n  if (!targetToken?.actor && targetTokenItemFlags?.itemType !== ItemType.CONTAINER) {\n    ui.notifications?.error(`Cannot drop '${dropData.data.name}' onto ${targetToken.name}`);\n    return false;\n  }\n\n  let itemData: any;\n\n  if (dropData.actor) {\n    // if the dropped item comes from an actor, we need to delete the item from that actor and get the data from the dropped data\n    log(\n      ` dropItemOnToken | Actor '${dropData.actor.id}' dropped item '${dropData.data._id}', get item data from the dropped item's original item data`,\n    );\n    itemData = duplicate(dropData.data);\n    await deleteOwnedItem(<string>dropData.actor.id, dropData.data._id);\n  } else {\n    // if the dropped item doesn't come from an actor, get it from the game's items or a compendium\n    log(` dropItemOnToken | item comes from directory or compendium, item data comes from directory or compendium`);\n    const pack = <string>dropData.pack;\n    const id = <string>dropData.id;\n    const item: Item = <Item>await getGame().items?.get(id) ?? (await getGame().packs.get(pack)?.getEntity(id));\n    if (!item) {\n      log(` dropItemOnToken | item '${id}' not found in game items or compendium`);\n      return false;\n    }\n    itemData = duplicate(item.data);\n  }\n\n  log(` dropItemOnToken | item data:`);\n  log([itemData]);\n\n  if (targetToken.actor) {\n    const droppedItemFlags: ItemFlags = getProperty(itemData, 'flags.pick-up-stix.pick-up-stix');\n\n    if (droppedItemFlags.itemType === ItemType.CONTAINER) {\n      ui.notifications?.error('Cannot add a container to a PC/NPC');\n      return false;\n    }\n\n    return createOwnedItem(\n      <string>targetToken.actor.id,\n      mergeObject(itemData, {\n        data: {\n          [getQuantityDataPath()]: 1,\n        },\n        flags: {\n          'pick-up-stix': {\n            'pick-up-stix': {\n              owner: targetToken.actor.id,\n            },\n          },\n        },\n      }),\n    ).then((result) => {\n      Hooks.callAll(PickUpStixHooks.itemDroppedOnToken);\n      const msg: SocketMessage = {\n        sender: <string>getGame().user?.id,\n        type: SocketMessageType.itemDroppedOnToken,\n        data: {\n          dropData,\n          targetTokenId,\n        },\n      };\n      getGame().socket?.emit(PICK_UP_STIX_SOCKET, msg);\n      return !!result;\n    });\n  }\n\n  return addItemToContainer({ itemData, containerItemId: targetTokenItem?.id }).then((result) => {\n    Hooks.callAll(PickUpStixHooks.itemDroppedOnToken);\n    const msg: SocketMessage = {\n      sender: <string>getGame().user?.id,\n      type: SocketMessageType.itemDroppedOnToken,\n      data: {\n        dropData,\n        targetTokenId,\n      },\n    };\n    getGame().socket?.emit(PICK_UP_STIX_SOCKET, msg);\n    return result;\n  });\n};\n\nexport const addItemToContainer = async (data: {\n  itemData: any;\n  containerItemId: string | null | undefined;\n}): Promise<boolean> => {\n  log(` addItemToContainer:`);\n  log([data]);\n\n  if (getGame().user?.isGM) {\n    log(` addItemToContainer | User is GM`);\n\n    const itemData = data.itemData;\n    const itemType = itemData.type;\n    const itemFlags: ItemFlags = getProperty(itemData, 'flags.pick-up-stix.pick-up-stix');\n\n    if (itemFlags?.itemType === ItemType.CONTAINER) {\n      // if the item being dropped is a container, you can't add it to another token\n      log(` addItemToContainer | Cannot add item '${itemData._id}' to container because it's a container`);\n      ui.notifications?.error('A container may only be placed onto an empty square without any tokens.');\n      return false;\n    }\n\n    const containerItem = <Item>getGame().items?.get(<string>data.containerItemId);\n    const containerItemFlags: ItemFlags = <ItemFlags>(\n      duplicate(containerItem.getFlag(PICK_UP_STIX_MODULE_NAME, PICK_UP_STIX_FLAG))\n    );\n    const containerData = <ContainerData>containerItemFlags?.container;\n\n    let loot: ContainerLoot = <ContainerLoot>containerData?.loot;\n\n    // if the container never had any loot, then 'loot' will not exist, so\n    // create an empty object\n    if (!loot) {\n      containerData.loot = {};\n      loot = containerData.loot;\n    }\n\n    // if the 'loot' object doesn't have any loot of the type being\n    // dropped it'll be undefined, so create an empty array, to hold\n    // loot of that item type\n    if (!loot[itemType]) {\n      log(` addItemToContainer | No items of type '${itemType}', creating new slot`);\n      loot[itemType] = [];\n    }\n\n    const qtyDataPath = getQuantityDataPath();\n\n    const existingItem = loot[itemType]?.find(\n      (i) =>\n        i.name?.toLowerCase() === itemData.name?.toLowerCase() &&\n        i.img === itemData.img &&\n        i.data?.description?.value?.toLowerCase() === itemData.data?.description?.value?.toLowerCase() &&\n        getProperty(i.data, getPriceDataPath()) === getProperty(itemData.data, getPriceDataPath()) &&\n        getProperty(i.data, getWeightDataPath()) === getProperty(itemData.data, getWeightDataPath()),\n    );\n\n    if (existingItem) {\n      log(` addItemToContainer | existing data for type '${itemType}', increase quantity by 1`);\n      setProperty(existingItem.data, qtyDataPath, +getProperty(existingItem.data, qtyDataPath) + 1);\n    } else {\n      log(\n        ` addItemToContainer | existing data for item '${itemData._id}' does not exist, set quantity to 1 and add to slot`,\n      );\n      setProperty(itemData.data, qtyDataPath, 1);\n      loot[itemType].push({\n        ...itemData,\n      });\n    }\n\n    await updateItem(data.containerItemId, {\n      flags: {\n        'pick-up-stix': {\n          'pick-up-stix': {\n            container: {\n              loot,\n            },\n          },\n        },\n      },\n    });\n\n    const msg: SocketMessage = {\n      sender: <string>getGame().user?.id,\n      type: SocketMessageType.itemAddedToContainer,\n      data,\n    };\n\n    getGame().socket?.emit(PICK_UP_STIX_SOCKET, msg);\n    Hooks.callAll(PickUpStixHooks.itemAddedToContainer, data);\n    return true;\n  }\n\n  return new Promise((resolve) => {\n    const timeout = setTimeout(() => {\n      resolve(false);\n    }, gmActionTimeout());\n\n    const msg: SocketMessage = {\n      sender: <string>getGame().user?.id,\n      type: SocketMessageType.addItemToContainer,\n      data,\n    };\n\n    log(` addItemToContainer | User is not GM, sending socket msg:`);\n    log([msg]);\n\n    Hooks.once(PickUpStixHooks.itemAddedToContainer, () => {\n      log(` addItemToContainer | pick-up-stix.itemAddedToContainer hook | User is not GM, sending socket msg:`);\n      clearTimeout(timeout);\n      resolve(true);\n    });\n\n    getGame().socket?.emit(PICK_UP_STIX_SOCKET, msg);\n  });\n};\n\nexport const lootCurrency = async (data: {\n  looterTokenId: string;\n  currencies: any;\n  containerItemId: string;\n}): Promise<boolean> => {\n  log(` lootCurrency:`);\n  log([data]);\n\n  if (getGame().user?.isGM) {\n    log(` lootCurrency | User is GM, looting currency`);\n\n    const looterToken = <Token>getCanvas().tokens?.placeables.find((p) => p.id === data.looterTokenId);\n    const containerItem = getGame().items?.get(data.containerItemId);\n    const containerFlags: ItemFlags = <ItemFlags>(\n      duplicate(containerItem?.getFlag(PICK_UP_STIX_MODULE_NAME, PICK_UP_STIX_FLAG))\n    );\n    const containerCurrencies = containerFlags?.container?.currency;\n    const currencyToLoot = data.currencies;\n\n    // get the actor's current currencies\n    const actorCurrency = {\n      ...(getProperty(<Object>looterToken.actor?.data, getActorCurrencyPath()) ?? {}),\n    };\n\n    Object.keys(actorCurrency).forEach((k) => (actorCurrency[k] = +(actorCurrency[k] ?? 0) + +currencyToLoot[k]));\n    Object.keys(containerCurrencies).forEach(\n      (k) => (containerCurrencies[k] = +containerCurrencies[k] - +currencyToLoot[k]),\n    );\n\n    await updateActor(<Actor>looterToken.actor, {\n      [getActorCurrencyPath()]: actorCurrency,\n    });\n\n    await updateItem(data.containerItemId, {\n      flags: {\n        'pick-up-stix': {\n          'pick-up-stix': {\n            container: {\n              currency: {\n                ...containerCurrencies,\n              },\n            },\n          },\n        },\n      },\n    });\n\n    currencyCollected(\n      looterToken,\n      Object.entries(currencyToLoot)\n        .filter(([, v]) => <number>v > 0)\n        .reduce((prev, [k, v]) => {\n          prev[k] = v;\n          return prev;\n        }, {}),\n    );\n\n    Hooks.callAll(PickUpStixHooks.currencyLooted);\n\n    const msg: SocketMessage = {\n      type: SocketMessageType.currencyLooted,\n      sender: <string>getGame().user?.id,\n      data,\n    };\n\n    getGame().socket?.emit(PICK_UP_STIX_SOCKET, msg);\n    return true;\n  }\n\n  return new Promise((resolve) => {\n    const timeout = setTimeout(() => {\n      resolve(false);\n    }, gmActionTimeout());\n\n    const msg: SocketMessage = {\n      sender: <string>getGame().user?.id,\n      type: SocketMessageType.lootCurrency,\n      data,\n    };\n\n    Hooks.once(PickUpStixHooks.currencyLooted, () => {\n      log(` lootCurrency | pick-up-stix.currencyLooted hook`);\n      clearTimeout(timeout);\n      resolve(true);\n    });\n\n    log(` lootCurrency | User is not GM, sending socket msg:`);\n    log([msg]);\n\n    getGame().socket?.emit(PICK_UP_STIX_SOCKET, msg);\n  });\n};\n\ninterface LootItemFunction {\n  /**\n   * A\n   */\n  (data: {\n    looterTokenId: string;\n    itemData: ItemData | ItemData[];\n    lootTokenTokenId: string;\n    takeAll: boolean;\n  }): Promise<boolean>;\n  /**\n   * B\n   */\n  (data: {\n    looterTokenId: string;\n    itemData: ItemData | ItemData[];\n    containerItemId: string;\n    lootTokenTokenId: string;\n    takeAll: boolean;\n  }): Promise<boolean>;\n}\n\nexport const lootItem: LootItemFunction = async (data: any): Promise<boolean> => {\n  log(` lootItem:`);\n  log([data]);\n\n  if (getGame().user?.isGM) {\n    log(` lootItem | User is GM`);\n\n    const qtyLootedById = {};\n    const looterToken = <Token>getCanvas().tokens?.placeables.find((p) => p.id === data.looterTokenId);\n    const looterActorId = <string>looterToken.actor?.id;\n    const itemDatas: ItemData[] = Array.isArray(data.itemData) ? data.itemData : [data.itemData];\n    const newItemDatas: ItemData[] = itemDatas.reduce((acc, itemData) => {\n      const qty = <number>getProperty(itemData.data, getQuantityDataPath());\n      const datas = [];\n      const actualQty = data.takeAll ? qty : 1;\n      qtyLootedById[itemData._id] = actualQty;\n\n      for (let i = 0; i < actualQty; i++) {\n        datas.push(\n          //@ts-ignore\n          mergeObject(itemData, { data: { [getQuantityDataPath()]: 1 } } as ItemData),\n        );\n      }\n      return acc.concat(datas);\n    }, []);\n\n    log(` lootItem | Items being looted:`);\n    log([newItemDatas]);\n\n    await createOwnedItem(looterActorId, newItemDatas);\n\n    if (data.containerItemId) {\n      const containerItem = <Item>getGame().items?.get(data.containerItemId);\n      const containerItemFlags: ItemFlags = <ItemFlags>(\n        duplicate(containerItem?.getFlag(PICK_UP_STIX_MODULE_NAME, PICK_UP_STIX_FLAG) ?? {})\n      );\n      const sourceLoot: ContainerLoot = <ContainerLoot>containerItemFlags?.container?.loot;\n\n      for (let [itemType, itemsOfType] of Object.entries(sourceLoot)) {\n        for (let itemData of itemsOfType) {\n          if (qtyLootedById[itemData._id] === undefined) {\n            continue;\n          }\n\n          const oldQty = getProperty(itemData?.data, getQuantityDataPath());\n          const newQty = oldQty - qtyLootedById[itemData._id];\n\n          if (newQty <= 0) {\n            log(` lootItem | Quantity is now 0, removing item from loot`);\n            sourceLoot?.[itemType]?.findSplice((v) => v._id === itemData._id);\n          } else {\n            log(` lootItem | Subtracting one from quantity`);\n            mergeObject(itemData.data, {\n              [getQuantityDataPath()]: newQty,\n            });\n          }\n        }\n      }\n\n      await containerItem.update(\n        {\n          flags: {\n            'pick-up-stix': {\n              'pick-up-stix': containerItemFlags,\n            },\n          },\n        },\n        {},\n      );\n    } else if (data.lootTokenTokenId) {\n      const lootTokenToken: Token = <Token>getCanvas().tokens?.placeables.find((p) => p.id === data.lootTokenTokenId);\n      await deleteToken(lootTokenToken.id, <string>lootTokenToken.scene.id);\n    }\n\n    const msg: SocketMessage = {\n      sender: <string>getGame().user?.id,\n      type: SocketMessageType.itemCollected,\n      data: {\n        tokenId: data.looterTokenId,\n        actorId: looterToken.actor?.id,\n        sourceItemId: data.containerItemId,\n        itemData: data.itemData,\n      },\n    };\n\n    for (const [id, qty] of Object.entries(qtyLootedById)) {\n      createItemCollectedChatMessage(\n        looterToken,\n        mergeObject(\n          {\n            ...newItemDatas.find((d) => d._id === id),\n          },\n          {\n            data: {\n              [getQuantityDataPath()]: qty,\n            },\n          },\n        ),\n      );\n    }\n\n    getGame().socket?.emit(PICK_UP_STIX_SOCKET, msg);\n    Hooks.callAll(PickUpStixHooks.itemCollected, data);\n    return true;\n  }\n\n  return new Promise((resolve) => {\n    const timeout = setTimeout(() => {\n      resolve(false);\n    }, gmActionTimeout());\n\n    const msg: SocketMessage = {\n      sender: <string>getGame().user?.id,\n      type: SocketMessageType.collectItem,\n      data,\n    };\n\n    Hooks.once(PickUpStixHooks.itemCollected, () => {\n      log(` lootItem | pick-up-stix.itemCollected hook`);\n      clearTimeout(timeout);\n      resolve(true);\n    });\n\n    log(` lootItem | User is not GM send msg:`);\n    log([msg]);\n\n    getGame().socket?.emit(PICK_UP_STIX_SOCKET, msg);\n  });\n};\n\nexport const currencyCollected = async (token, currency) => {\n  log(` currencyCollected | called with args:`);\n  log([token, currency]);\n  let chatContent = '';\n  Object.entries(currency).forEach(([k, v]) => {\n    chatContent += `<span class=\"pick-up-stix-chat-currency ${k}\"></span><span>(${k}) ${v}</span><br />`;\n  });\n  let content = `<p>Picked up:</p>${chatContent}`;\n  await ChatMessage.create({\n    content,\n    speaker: {\n      alias: token.actor.name,\n      scene: token.scene.id,\n      actor: token.actor.id,\n      token: token.id,\n    },\n  });\n};\n\nexport const createItemCollectedChatMessage = async (token, item) => {\n  await ChatMessage.create({\n    content: `\n\t\t\t<p>Picked up ${item.name} (x${getProperty(item.data, getQuantityDataPath())})</p>\n\t\t\t<img src=\"${item.img}\" style=\"width: 40px;\" />\n\t\t`,\n    speaker: {\n      alias: token.actor.name,\n      scene: token.scene.id,\n      actor: token.actor.id,\n      token: token.id,\n    },\n  });\n};\n"]}