{"version":3,"sources":["module/pick-up-stix/container-sound-config-application.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,GAAG,EAAE,qBAAkB;AAEhC,OAAO,EAAE,UAAU,EAAE,kBAAe;AAEpC,MAAM,OAAO,oBAAqB,SAAQ,eAAe;IACvD,MAAM,KAAK,cAAc;QACvB,YAAY;QACZ,OAAO,WAAW,CAAC,KAAK,CAAC,cAAc,EAAE;YACvC,OAAO,EAAE,CAAC,cAAc,EAAE,8BAA8B,CAAC;YACzD,aAAa,EAAE,KAAK;YACpB,MAAM,EAAE,MAAM;YACd,EAAE,EAAE,qCAAqC;YACzC,WAAW,EAAE,KAAK;YAClB,SAAS,EAAE,KAAK;YAChB,cAAc,EAAE,IAAI;YACpB,aAAa,EAAE,IAAI;YACnB,KAAK,EAAE,GAAG;YACV,QAAQ,EAAE,gFAAgF;YAC1F,KAAK,EAAE,4BAA4B;SACpC,CAAC,CAAA;IACJ,CAAC;IAED,YAAY,MAAM,EAAE,OAAO;QACzB,KAAK,CAAC,MAAM,EAAE,OAAO,CAAC,CAAC;IACzB,CAAC;IAES,eAAe,CAAC,CAAC;QACzB,IAAI,UAAU,CAAC;YACb,IAAI,EAAE,OAAO;YACb,YAAY;YACZ,OAAO,EAAU,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,cAAc,EAAE,gBAAgB,CAAC,CAAC,aAAa,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;YACpG,YAAY;YACZ,QAAQ,EAAE,CAAC,IAAI,EAAE,EAAE;gBACjB,CAAC,CAAC,aAAa,CAAC,GAAG,GAAG,IAAI,CAAC;gBAC3B,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;YACpB,CAAC;SACF,CAAC,CAAA;IACJ,CAAC;IAED,KAAK,CAAC,aAAa,CAAC,CAAC,EAAE,QAAQ;QAC7B,GAAG,CAAC,kDAAkD,IAAI,CAAC,KAAK,kBAAkB,CAAC,CAAC;QACpF,GAAG,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;QAChB,YAAY;QACZ,MAAM,KAAK,GAAc,SAAS,CAAY,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,cAAc,EAAE,cAAc,CAAC,CAAC,CAAC;QACnG,YAAY;QACZ,MAAM,UAAU,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE,EAAE;YAC/B,KAAK,EAAE;gBACL,cAAc,EAAE;oBACd,cAAc,EAAE;wBACd,SAAS,EAAE;4BACT,GAAG,QAAQ;yBACZ;qBACF;iBACF;aACF;SACF,CAAC,CAAC;IACL,CAAC;IAED,OAAO,CAAC,OAAO;QACb,GAAG,CAAC,kDAAkD,IAAI,CAAC,KAAK,YAAY,CAAC,CAAC;QAC9E,MAAM,IAAI,GAAG;YACX,YAAY;YACZ,aAAa,EAAU,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,cAAc,EAAE,sCAAsC,CAAC,IAAI,EAAE;YACxG,YAAY;YACZ,cAAc,EAAU,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,cAAc,EAAE,uCAAuC,CAAC,IAAI,EAAE;SAC3G,CAAA;QACD,GAAG,CAAC,IAAI,CAAC,CAAC;QACV,OAAO,IAAI,CAAC;IACd,CAAC;CACF","file":"../../../module/pick-up-stix/container-sound-config-application.js","sourcesContent":["import { log } from \"../../log\";\nimport { ItemFlags } from \"./loot-token\";\nimport { updateItem } from \"./main\";\n\nexport class ContainerSoundConfig extends FormApplication {\n  static get defaultOptions() {\n    //@ts-ignore\n    return mergeObject(super.defaultOptions, {\n      classes: ['pick-up-stix', 'container-sound-config-sheet'],\n      closeOnSubmit: false,\n      height: 'auto',\n      id: 'pick-up-stix-container-config-sheet',\n      minimizable: false,\n      resizable: false,\n      submitOnChange: true,\n      submitOnClose: true,\n      width: 350,\n      template: 'modules/pick-up-stix/module/pick-up-stix/templates/container-sound-config.html',\n      title: 'Configure Container Sounds'\n    })\n  }\n\n  constructor(object, options) {\n    super(object, options);\n  }\n\n  protected _openFilePicker(e): void {\n    new FilePicker({\n      type: \"audio\",\n      //@ts-ignore\n      current: <string>this.object.getFlag('pick-up-stix', `pick-up-stix.${e.currentTarget.dataset.edit}`),\n      //@ts-ignore\n      callback: (path) => {\n        e.currentTarget.src = path;\n        this._onSubmit(e);\n      }\n    })\n  }\n\n  async _updateObject(e, formData) {\n    log(`pick-up-stix | ContainerSoundConfigApplication ${this.appId} | _updateObject`);\n    log([formData]);\n    //@ts-ignore\n    const flags: ItemFlags = duplicate(<ItemFlags>this.object.getFlag('pick-up-stix', 'pick-up-stix'));\n    //@ts-ignore\n    await updateItem(this.object.id, {\n      flags: {\n        'pick-up-stix': {\n          'pick-up-stix': {\n            container: {\n              ...formData\n            }\n          }\n        }\n      }\n    });\n  }\n\n  getData(options):any {\n    log(`pick-up-stix | ContainerSoundConfigApplication ${this.appId} | getData`);\n    const data = {\n      //@ts-ignore\n      openSoundPath: <string>this.object.getFlag('pick-up-stix', 'pick-up-stix.container.soundOpenPath') ?? '',\n      //@ts-ignore\n      closeSoundPath: <string>this.object.getFlag('pick-up-stix', 'pick-up-stix.container.soundClosePath') ?? ''\n    }\n    log(data);\n    return data;\n  }\n}\n"]}