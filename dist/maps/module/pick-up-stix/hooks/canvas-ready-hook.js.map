{"version":3,"sources":["module/pick-up-stix/hooks/canvas-ready-hook.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,GAAG,EAAE,wBAAqB;AAEnC,OAAO,EACN,YAAY,EACZ,iBAAiB,EACjB,iBAAiB,EACjB,mBAAgB;AAEjB;;;;;GAKG;AACH,MAAM,iBAAiB,GAAG,KAAK,EAAE,MAAM,EAAE,QAAQ,EAAE,EAAE;IACpD,GAAG,CAAC,mDAAmD,CAAC,CAAC;IACzD,GAAG,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAC;IAEtB,IAAI,QAAQ,CAAC,IAAI,KAAK,MAAM,EAAE;QAC7B,iBAAiB,CAAC,MAAM,iBAAiB,CAAC,QAAQ,CAAC,CAAC,CAAC;KACrD;AACF,CAAC,CAAA;AAED,MAAM,CAAC,MAAM,eAAe,GAAG,KAAK,EAAE,MAAM,EAAE,EAAE;IAC9C,GAAG,CAAC,gCAAgC,CAAC,CAAC;IACtC,GAAG,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;IACf,KAAK,IAAI,KAAK,IAAI,MAAM,CAAC,MAAM,CAAC,UAAU,EAAE,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,YAAY,KAAK,CAAC,EAAE;QAC5E,MAAM,UAAU,GAAe,KAAK,CAAC,OAAO,CAAC,cAAc,EAAE,cAAc,CAAC,CAAC;QAC7E,IAAI,CAAC,UAAU,EAAE,MAAM,EAAE;YACxB,SAAS;SACT;QAED,GAAG,CAAC,iDAAiD,KAAK,CAAC,EAAE,oBAAoB,UAAU,CAAC,MAAM,GAAG,CAAC,CAAC;QAEvG,IAAI,SAAS,GAAc,YAAY,CAAC,EAAE,MAAM,EAAE,UAAU,CAAC,MAAM,EAAE,OAAO,EAAE,KAAK,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;QAE/F,IAAI,KAAK,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC,cAAc,CAAC,EAAE,CAAC,cAAc,CAAC,EAAE,QAAQ,EAAE;YACnE,SAAS,EAAE,QAAQ,EAAE,CAAC;SACtB;QAED,SAAS,EAAE,iBAAiB,EAAE,CAAC;KAC/B;IAED,KAAK,CAAC,GAAG,CAAC,gBAAgB,EAAE,iBAAiB,CAAC,CAAC;IAC/C,KAAK,CAAC,EAAE,CAAC,gBAAgB,EAAE,iBAAiB,CAAC,CAAC;AAC/C,CAAC,CAAA","file":"../../../../module/pick-up-stix/hooks/canvas-ready-hook.js","sourcesContent":["import { log } from \"../../../log\";\r\nimport { LootToken, TokenFlags } from \"../loot-token\";\r\nimport {\r\n\tgetLootToken,\r\n\thandleItemDropped,\r\n\tnormalizeDropData\r\n} from \"../main\";\r\n\r\n/**\r\n * Handler for the dropCanvasData Foundry hook. This is used\r\n * in Foundry 0.7.0 and above\r\n * @param canvas\r\n * @param dropData\r\n */\r\nconst dropCanvasHandler = async (canvas, dropData) => {\r\n\tlog(`pick-up-stix | dropCanvasData | called with args:`);\r\n\tlog(canvas, dropData);\r\n\r\n\tif (dropData.type === \"Item\") {\r\n\t\thandleItemDropped(await normalizeDropData(dropData));\r\n\t}\r\n}\r\n\r\nexport const canvasReadyHook = async (canvas) => {\r\n  log(`pick-up-stix | canvasReadyHook`);\r\n  log([canvas]);\r\n\tfor (let token of canvas.tokens.placeables?.filter(p => p instanceof Token)) {\r\n\t\tconst tokenFlags: TokenFlags = token.getFlag('pick-up-stix', 'pick-up-stix');\r\n\t\tif (!tokenFlags?.itemId) {\r\n\t\t\tcontinue;\r\n\t\t}\r\n\r\n\t\tlog(`pick-up-stix | canvasReadyHook | Found token '${token.id}' with for item '${tokenFlags.itemId}'`);\r\n\r\n\t\tlet lootToken: LootToken = getLootToken({ itemId: tokenFlags.itemId, tokenId: token.id })?.[0];\r\n\r\n\t\tif (token.data.flags?.['pick-up-stix']?.['pick-up-stix']?.isLocked) {\r\n\t\t\tlootToken?.drawLock();\r\n\t\t}\r\n\r\n\t\tlootToken?.activateListeners();\r\n\t}\r\n\r\n\tHooks.off('dropCanvasData', dropCanvasHandler);\r\n\tHooks.on('dropCanvasData', dropCanvasHandler);\r\n}\r\n"]}