{"version":3,"sources":["module/pick-up-stix/hooks/ready-hook.ts"],"names":[],"mappings":"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","file":"../../../../module/pick-up-stix/hooks/ready-hook.js","sourcesContent":["import { error, log } from \"../../../log\";\nimport { amIFirstGm, versionDiff } from \"../../../utils\";\nimport ContainerConfigApplication from \"../container-config\";\nimport { LootToken, TokenFlags } from \"../loot-token\";\nimport {\n\tcreateItem,\n\tcreateOwnedItem,\n\tcreateToken,\n\tdeleteItem,\n\tdeleteOwnedItem,\n\tdeleteToken,\n\tgetLootToken,\n\tupdateActor,\n\tupdateOwnedItem,\n\tupdateItem,\n\tupdateToken,\n\tcreateLootToken,\n\tlootItem,\n\tlootCurrency,\n\taddItemToContainer,\n\tdropItemOnToken\n} from \"../main\";\nimport { ItemType, PickUpStixHooks, SocketMessage, SocketMessageType } from \"../models\";\nimport { SettingKeys } from \"../settings\";\n\ndeclare class EntitySheetConfig {\n\tstatic registerSheet(\n    entityClass,\n    scope,\n    sheetClass,\n    { types, makeDefault }?: { types?: string[], makeDefault?: boolean }\n  );\n}\n\n/* ------------------------------------ */\nexport async function readyHook() {\n\t// Do anything once the module is ready\n\tlog(`pick-up-stix | readyHook`);\n\n\t// this adds the 'container' type to the game system's entity types.\n\tgame.system.entityTypes.Item.push(ItemType.CONTAINER);\n\n\t// add the default sheet to the container Item type\n\tCONFIG.Item.sheetClasses[ItemType.CONTAINER] = {\n\t\t\t'pick-up-stix.ContainerConfigApplication': {\n        //@ts-ignore\n\t\t\t\tcls: ContainerConfigApplication,\n\t\t\tdefault: true,\n\t\t\tid: 'pick-up-stix.ContainerConfigApplication'\n\t\t}\n\t};\n\n\tif (amIFirstGm()) {\n\t\tawait createDefaultFolders();\n\t}\n\n\tfor (let el of Scene.collection) {\n\t\tlet scene = (el as unknown) as Scene;\n\t\tlet tokens = scene.getEmbeddedCollection('Token');\n\t\tfor (let token of tokens) {\n\t\t\tconst tokenFlags: TokenFlags = getProperty(token, 'flags.pick-up-stix.pick-up-stix');\n\t\t\tif (!tokenFlags) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tlet lootToken = getLootToken({ itemId: tokenFlags?.itemId, tokenId: token._id })?.[0];\n\n\t\t\tif (tokenFlags?.itemId && !lootToken) {\n\t\t\t\tlog(`pick-up-stix | readyHook | Creating new LootToken for Token '${token._id}' and Item '${tokenFlags.itemId}'`);\n\t\t\t\tlootToken = await createLootToken(token._id, tokenFlags.itemId, false);\n\t\t\t}\n\t\t}\n\n\t\tscene = game.scenes.active;\n\t\ttokens = scene.getEmbeddedCollection('Token');\n\t\tfor (let token of tokens) {\n\t\t\tconst tokenFlags: TokenFlags = getProperty(token, 'flags.pick-up-stix.pick-up-stix');\n\t\t\tif (!tokenFlags) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tlet lootTokens = getLootToken({ itemId: tokenFlags?.itemId, tokenId: token._id });\n\t\t\tfor(let lt of lootTokens) {\n\t\t\t\tif (tokenFlags.isLocked) {\n\t\t\t\t\tlt.drawLock();\n\t\t\t\t}\n\t\t\t\tlt.activateListeners();\n\t\t\t}\n\t\t}\n\t}\n\n\tfor (let item of game.items.values()) {\n\t\tif (getProperty(item, 'data.flags.pick-up-stix.pick-up-stix.itemType') === ItemType.CONTAINER) {\n\t\t\titem.data.type = ItemType.CONTAINER;\n\t\t}\n\t}\n  //@ts-ignore\n\tconst activeVersion = <string>game.modules.get('pick-up-stix').data.version;\n\tconst previousVersion = <string>game.settings.get('pick-up-stix', SettingKeys.version);\n\n\tif (amIFirstGm() && activeVersion !== previousVersion) {\n\t\tawait game.settings.set('pick-up-stix', SettingKeys.version, activeVersion);\n\t}\n\n\tconst diff = versionDiff(activeVersion, previousVersion);\n\tif (diff < 0) {\n\t\tlog(`pick-up-stix | readyHook | current version ${activeVersion} is lower than previous version ${previousVersion}`);\n\t}\n\telse if (diff > 0) {\n\t\tlog(`pick-up-stix | readyHook | current version ${activeVersion} is greater than previous version ${previousVersion}`);\n\t}\n\telse {\n\t\tlog(`pick-up-stix | readyHook | current version ${activeVersion} the same as the previous version ${previousVersion}`);\n  }\n\n  const el = document.createElement('div');\n  el.innerHTML = `<p>I have made some improvements that should hopefully speed up the module but want to point out a few changes</p>\n    <p>First off you'll notice new Item folders have been created. A parent folder named <strong>Pick-Up-Stix</strong>\n    and two folders within there named <strong>Items</strong>, and <strong>Tokens</strong>. Once these folders have been created, you\n    are free to move them around however, if you delete them as of now there is no way to recover any previous contents,\n    though the folder should be recreated on the next startup. These folders can not be seen by players that are not GMs.</p>\n    <p>The <strong>Tokens</strong> folder contains Items that represent any loot token instances that are in a scene. If you edit one of them\n    from the Items directory, then you will edit all loot token instances attached to it. If you want to create another instance,\n    simply drag one of the Items from the <strong>Tokens</strong> Item folder and you'll have a copy of that Item that will\n    update when it updates. If you delete an Item from the <strong>Tokens</strong> folder, then all loot token instances will\n    be removed from all scenes. If you delete all loot token instances from all scenes, the Item associated with it in the\n    <strong>Tokens</strong> folder will also be deleted</p>\n    <p>The <strong>Items</strong> folder is a template folder. When you create an Item and choose the 'container' type, you'll get\n    an Item created in the <strong>Items</strong> folder. If you drag one of these onto the canvas, you'll create a new loot token\n    based on the properties of that Item, but you'll notice that a new Item is created in the <strong>Tokens</strong> folder. You can\n    updated this new loot token by either updating it's new corresponding Item or through the token's config menu. You can\n    also update that token and then drag a copy of it from the <strong>Tokens</strong> folder NOT the <strong>Items</strong> folder to\n    create a new loot token with the udpated properties. Items in the <strong>Items</strong> folder are not deleted when any\n    loot tokens created from them are deleted, nor are any loot tokens deleted when any Items in the <strong>Items</strong> directory\n    are removed. Currently, only container-type Items are treated as templates since item-type Items are already their own templates.</p>`;\n\n  if (amIFirstGm() && !game.settings.get('pick-up-stix', SettingKeys.version13updatemessage)) {\n    new Dialog({\n      title: 'Pick-Up-Stix - Update notification',\n      buttons: {\n        'OK': {\n          label: 'OK'\n        }\n      },\n      default: 'OK',\n      content: el.innerHTML\n    }, {\n        width: 750,\n      height: 'auto'\n    }).render(true);\n    await game.settings.set('pick-up-stix', SettingKeys.version13updatemessage, true);\n  }\n\n\tgame.socket.on('module.pick-up-stix', handleSocketMessage);\n};\n\nconst createDefaultFolders = async () => {\n\tlog(`pick-up-stix | createDefaultFolders`);\n\n\t// check if the parent folder exists and create it if not\n\tlet parentFolderId = <string>game.settings.get('pick-up-stix', SettingKeys.parentItemFolderId);\n\tlet folder = Folder.collection.get(parentFolderId);\n\n\tif (!folder) {\n\t\tlog(`pick-up-stix | createDefaultFolders | couldn't parent folder creating it now`);\n\t\tfolder = await Folder.create({\n\t\t\tcolor: '',\n\t\t\tname: 'Pick-Up-Stix',\n\t\t\tsorting: 'a',\n\t\t\tparent: null,\n\t\t\ttype: 'Item'\n\t\t});\n\t\tparentFolderId = folder.id;\n\t\tawait game.settings.set('pick-up-stix', SettingKeys.parentItemFolderId, parentFolderId);\n\t}\n\telse {\n\t\tlog(`pick-up-stix | createDefaultFolders | parent folder '${folder.name}' found`);\n\t}\n\n\t// check if the tokens folder exist and create it if not\n\tfolder = Folder.collection.get(<string>game.settings.get('pick-up-stix', SettingKeys.tokenFolderId));\n\n\tif (!folder) {\n\t\tlog(`pick-up-stix | createDefaultFolders | couldn't find tokens folder, creating it now`);\n    //@ts-ignore\n\t\tfolder = await Folder.create({\n\t\t\tcolor: '',\n\t\t\tname: 'Tokens',\n\t\t\tsorting: 'a',\n\t\t\tparent: parentFolderId,\n\t\t\ttype: 'Item'\n\t\t});\n\t\tawait game.settings.set('pick-up-stix', SettingKeys.tokenFolderId, folder.id);\n\t}\n\telse {\n\t\tlog(`pick-up-stix | createDefaultFolders | tokens folder '${folder.name}' found`);\n\t}\n\n\t// check if the items folder exists and create it if not\n\tfolder = Folder.collection.get(<string>game.settings.get('pick-up-stix', SettingKeys.itemFolderId));\n\n\tif (!folder) {\n\t\tlog(`pick-up-stix | createDefaultFolders | couldn't find items folder`);\n    //@ts-ignore\n\t\tfolder = await Folder.create({\n\t\t\tcolor: '',\n\t\t\tname: 'Items',\n\t\t\tsorting: 'a',\n\t\t\tparent: parentFolderId,\n\t\t\ttype: 'Item'\n\t\t});\n\t\tawait game.settings.set('pick-up-stix', SettingKeys.itemFolderId, folder.id);\n\t}\n\telse {\n\t\tlog(`pick-up-stix | createDefaultFolders | items folder '${folder.name}' found`);\n\t}\n};\n\nexport const handleSocketMessage = async (msg: SocketMessage) => {\n\tlog(`pick-up-stix | handleSocketMessage | received socket message with args:`);\n\tlog([msg]);\n\n\tif (handleNonGMMessage(msg)) {\n\t\treturn;\n\t}\n\n\t/* if (msg.sender === game.user.id) {\n\t\tlog(`pick-up-stix | handleSocketMessage | i sent this, ignoring`);\n\t\treturn;\n\t} */\n\n\tif (!amIFirstGm()) {\n\t\t return;\n\t}\n\n\tswitch (msg.type) {\n\t\tcase SocketMessageType.deleteOwnedItem:\n\t\t\tawait deleteOwnedItem(msg.data.actorId, msg.data.itemId);\n\t\t\tbreak;\n\t\tcase SocketMessageType.updateOwnedItem:\n\t\t\tawait updateOwnedItem(msg.data.actorId, msg.data.data);\n\t\t\tbreak;\n\t\tcase SocketMessageType.updateActor:\n\t\t\tawait updateActor(game.actors.get(msg.data.actorId), msg.data.updates);\n\t\t\tbreak;\n\t\tcase SocketMessageType.deleteToken:\n\t\t\tawait deleteToken(msg.data.tokenId, msg.data.sceneId);\n\t\t\tbreak;\n\t\tcase SocketMessageType.updateItem:\n\t\t\tawait updateItem(msg.data.id, msg.data.updates);\n\t\t\tbreak;\n\t\tcase SocketMessageType.updateToken:\n\t\t\tawait updateToken(msg.data.sceneId, msg.data.updates);\n\t\t\tbreak;\n\t\tcase SocketMessageType.createOwnedItem:\n\t\t\tawait createOwnedItem(msg.data.actorId, msg.data.items);\n\t\t\tbreak;\n\t\tcase SocketMessageType.createToken:\n\t\t\tawait createToken(msg.data);\n\t\t\tbreak;\n\t\tcase SocketMessageType.createItem:\n\t\t\tawait createItem(msg.data.data, msg.data.options);\n\t\t\tbreak;\n\t\tcase SocketMessageType.deleteItem:\n\t\t\tawait deleteItem(msg.data.id);\n\t\t\tbreak;\n\t\tcase SocketMessageType.collectItem:\n\t\t\tawait lootItem(msg.data);\n\t\t\tbreak;\n\t\tcase SocketMessageType.lootCurrency:\n\t\t\tawait lootCurrency(msg.data);\n\t\t\tbreak;\n\t\tcase SocketMessageType.addItemToContainer:\n\t\t\tawait addItemToContainer(msg.data);\n\t\t\tbreak;\n\t\tcase SocketMessageType.dropItemOnToken:\n\t\t\tawait dropItemOnToken(msg.data);\n\t\t\tbreak;\n\t\tdefault:\n\t\t\terror(`pick-up-stix | handleSocketMessage | No valid socket message handler for '${msg.type}' with arg:`);\n\t\t\tlog([msg])\n\t}\n};\n\nconst handleNonGMMessage = (msg: SocketMessage): boolean => {\n  let handled = false;\n\n  switch (msg.type) {\n    case SocketMessageType.lootTokenCreated:\n      Hooks.callAll(PickUpStixHooks.lootTokenCreated, msg.data.tokenId);\n      handled = true;\n\t\t\tbreak;\n\t\tcase SocketMessageType.itemCollected:\n      Hooks.callAll(PickUpStixHooks.itemCollected, msg.data);\n      handled = true;\n\t\t\tbreak;\n\t\tcase SocketMessageType.currencyLooted:\n      Hooks.callAll(PickUpStixHooks.currencyLooted, msg.data);\n      handled = true;\n\t\t\tbreak;\n\t\tcase SocketMessageType.itemAddedToContainer:\n      Hooks.callAll(PickUpStixHooks.itemAddedToContainer, msg.data);\n      handled = true;\n\t\t\tbreak;\n  }\n\n  return handled;\n};\n"]}