{"version":3,"sources":["module/pick-up-stix/hooks/update-item-hook.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,GAAG,EAAE,wBAAqB;AACnC,OAAO,EAAE,UAAU,EAAE,0BAAuB;AAE5C,OAAO,EAAE,YAAY,EAAe,mBAAgB;AACpD,OAAO,EAAE,SAAS,EAAE,uBAAoB;AAExC,MAAM,CAAC,MAAM,cAAc,GAAG,KAAK,EAAE,IAAI,EAAE,IAAI,EAAE,OAAO,EAAE,MAAM,EAAE,EAAE;IAClE,GAAG,CAAC,+BAA+B,CAAC,CAAC;IACrC,GAAG,CAAC,CAAC,IAAI,EAAE,IAAI,EAAE,OAAO,EAAE,MAAM,CAAC,CAAC,CAAC;IAEnC,MAAM,SAAS,GAAc,IAAI,CAAC,OAAO,CAAC,cAAc,EAAE,cAAc,CAAC,CAAC;IAC1E,GAAG,CAAC,4CAA4C,CAAC,CAAC;IAClD,GAAG,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC;IAEjB,IAAI,CAAC,UAAU,EAAE,EAAE;QACjB,GAAG,CAAC,gDAAgD,CAAC,CAAC;QACtD,OAAO;KACR;IAED,MAAM,UAAU,GAAG,YAAY,CAAC,EAAE,MAAM,EAAE,IAAI,CAAC,EAAE,EAAE,CAAC,CAAC;IACrD,MAAM,OAAO,GAAG,EAAE,CAAC;IACnB,KAAK,IAAI,EAAE,IAAI,UAAU,EAAE;QACzB,OAAO,CAAC,IAAI,CAAC;YACX,GAAG,EAAE,EAAE,CAAC,OAAO;YACf,KAAK,EAAE,SAAS,EAAE,SAAS,EAAE,KAAK,IAAI,CAAC;YACvC,MAAM,EAAE,SAAS,EAAE,SAAS,EAAE,MAAM,IAAI,CAAC;YACzC,IAAI,EAAE,IAAI,CAAC,IAAI,CAAC,IAAI;YACpB,GAAG,EAAE,SAAS,CAAC,SAAS,KAAK,SAAS;gBACpC,CAAC,CAAC,CAAC,EAAE,CAAC,MAAM;oBACV,CAAC,CAAC,SAAS,CAAC,SAAS,CAAC,aAAa;oBACnC,CAAC,CAAC,SAAS,CAAC,SAAS,CAAC,cAAc,CACrC;gBACD,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG;SAClB,CAAC,CAAC;KACJ;IACH,SAAS,EAAE,CAAC,MAAM,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC;AACvC,CAAC,CAAA","file":"../../../../module/pick-up-stix/hooks/update-item-hook.js","sourcesContent":["import { log } from \"../../../log\";\nimport { amIFirstGm } from \"../../../utils\";\nimport { ItemFlags } from \"../loot-token\";\nimport { getLootToken, updateToken } from \"../main\";\nimport { getCanvas } from \"../settings\";\n\nexport const updateItemHook = async (item, data, options, userId) => {\n  log(`pick-up-stix | updateItemHook`);\n  log([item, data, options, userId]);\n\n  const itemFlags: ItemFlags = item.getFlag('pick-up-stix', 'pick-up-stix');\n  log(`pick-up-stix | updateItemHook | itemFlags:`);\n  log([itemFlags]);\n\n  if (!amIFirstGm()) {\n    log(`pick-up-stix | updateItemHook | User is not GM`);\n    return;\n  }\n\n  const lootTokens = getLootToken({ itemId: item.id });\n  const updates = [];\n  for (let lt of lootTokens) {\n    updates.push({\n      _id: lt.tokenId,\n      width: itemFlags?.tokenData?.width ?? 1,\n      height: itemFlags?.tokenData?.height ?? 1,\n      name: item.data.name,\n      img: itemFlags.container !== undefined\n        ? (lt.isOpen\n          ? itemFlags.container.imageOpenPath\n          : itemFlags.container.imageClosePath\n        )\n        : item.data.img\n    });\n  }\ngetCanvas().tokens.updateMany(updates);\n}\n"]}