{"version":3,"sources":["module/pick-up-stix/models.ts"],"names":[],"mappings":"AAmCA,MAAM,CAAC,MAAM,eAAe,GAAG;IAC9B,oBAAoB,EAAE,mCAAmC;IACzD,cAAc,EAAE,6BAA6B;IAC7C,aAAa,EAAE,4BAA4B;IAC3C,gBAAgB,EAAE,+BAA+B;IACjD,kBAAkB,EAAE,iCAAiC;CACrD,CAAA;AAED,MAAM,CAAN,IAAY,iBAoBX;AApBD,WAAY,iBAAiB;IAC5B,gDAA2B,CAAA;IAC3B,8CAAyB,CAAA;IACzB,gDAA2B,CAAA;IAC3B,wDAAmC,CAAA;IACnC,gDAA2B,CAAA;IAC3B,8CAAyB,CAAA;IACzB,8CAAyB,CAAA;IACzB,0DAAqC,CAAA;IACrC,wDAAmC,CAAA;IACnC,wDAAmC,CAAA;IACnC,gDAA2B,CAAA;IAC3B,oDAA+B,CAAA;IAC/B,gDAA2B,CAAA;IAC3B,kDAA6B,CAAA;IAC7B,sDAAiC,CAAA;IACjC,wDAAmC,CAAA;IACnC,8DAAyC,CAAA;IACzC,kEAA6C,CAAA;IAC7C,8DAAyC,CAAA;AAC1C,CAAC,EApBW,iBAAiB,KAAjB,iBAAiB,QAoB5B;AASD,MAAM,CAAN,IAAY,QAIX;AAJD,WAAY,QAAQ;IACnB,yBAAa,CAAA;IACb,yBAAa,CAAA;IACb,mCAAuB,CAAA;AACxB,CAAC,EAJW,QAAQ,KAAR,QAAQ,QAInB","file":"../../../module/pick-up-stix/models.js","sourcesContent":["export interface DropData {\r\n\t// If the item being dropped comes from an actor token, then the tokenId will be available\r\n\ttokenId?: string;\r\n\r\n\t// If the item being dropped comes from an actor token, then the sceneId that the token\r\n\t// is on will be included.\r\n\tsceneId?: string;\r\n\r\n\t// If the item being dropped comes from an actor sheet, then the actorId will be included\r\n\tactorId?: string;\r\n\r\n\t// If the item being droppped comes from a compendium then the pack name will be included\r\n\tpack?: string;\r\n\r\n\t// The ID of the item Entity being dropped\r\n\tid?: string;\r\n\r\n\t// The item Entity's data\r\n\tdata?:any;\r\n\r\n\t// If the item Entity being dropped comes from an actor, this will be a reference\r\n\t// to the actor Entity it belongs to\r\n\tactor?: Actor;\r\n\r\n\t// x and y postion where the item was dropped, this would need to be converted into world coordinates\r\n\tx: number;\r\n\ty: number;\r\n\tgridX: number;\r\n\tgridY: number;\r\n\r\n\t// this is the type that comes from foundry. We'll test for this when dropping on the item config\r\n\t// application to ensure we are only accepting the \"Item\" types\r\n\ttype?: string;\r\n}\r\n\r\nexport const PickUpStixHooks = {\r\n\titemAddedToContainer: 'pick-up-stix.itemAddedToContainer',\r\n\tcurrencyLooted: 'pick-up-stix.currencyLooted',\r\n\titemCollected: 'pick-up-stix.itemCollected',\r\n\tlootTokenCreated: 'pick-up-stix.lootTokenCreated',\r\n\titemDroppedOnToken: 'pick-up-stix.itemDroppedOnToken'\r\n}\r\n\r\nexport enum SocketMessageType {\r\n\tdeleteToken = 'deleteToken',\r\n\tupdateItem = 'updateItem',\r\n\tupdateActor = 'updateActor',\r\n\tcreateOwnedItem = 'createOwnedItem',\r\n\tcreateToken = 'createToken',\r\n\tcreateItem = 'createItem',\r\n\tdeleteItem = 'deleteItem',\r\n\tlootTokenCreated = 'lootTokenCreated',\r\n\tupdateOwnedItem = \"updateOwnedItem\",\r\n\tdeleteOwnedItem = \"deleteOwnedItem\",\r\n\tupdateToken = \"updateToken\",\r\n\titemCollected = 'itemCollected',\r\n\tcollectItem = 'collectItem',\r\n\tlootCurrency = 'lootCurrency',\r\n\tcurrencyLooted = 'currencyLooted',\r\n\tdropItemOnToken = 'dropItemOnToken',\r\n\taddItemToContainer = 'addItemToContainer',\r\n\titemAddedToContainer = 'itemAddedToContainer',\r\n\titemDroppedOnToken = 'itemDroppedOnToken'\r\n}\r\n\r\nexport interface SocketMessage {\r\n\t// user ID of the sender\r\n\tsender: string;\r\n\ttype: SocketMessageType;\r\n\tdata?: any;\r\n}\r\n\r\nexport enum ItemType {\r\n\tNONE = 'none',\r\n\tITEM = 'item',\r\n\tCONTAINER = 'container'\r\n}\r\n"]}