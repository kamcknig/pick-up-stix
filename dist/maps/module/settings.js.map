{"version":3,"sources":["module/settings.ts"],"names":[],"mappings":"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","file":"../../module/settings.js","sourcesContent":["import { log } from '../main';\nimport ImagePicker from './libs/ImagePicker';\nimport SoundPicker from './libs/SoundPicker';\n\nexport const PICK_UP_STIX_MODULE_NAME = 'pick-up-stix';\n\nexport const PICK_UP_STIX_FLAG = 'pick-up-stix';\n\nexport const PICK_UP_STIX_ITEM_ID_FLAG = 'pick-up-stix.itemId';\n\nexport const PICK_UP_STIX_TOKEN_ID_FLAG = 'pick-up-stix.tokenId';\n\nexport const PICK_UP_STIX_SOCKET = 'module.pick-up-stix';\n\n/**\n * Because typescript doesn't know when in the lifecycle of foundry your code runs, we have to assume that the\n * canvas is potentially not yet initialized, so it's typed as declare let canvas: Canvas | {ready: false}.\n * That's why you get errors when you try to access properties on canvas other than ready.\n * In order to get around that, you need to type guard canvas.\n * Also be aware that this will become even more important in 0.8.x because no canvas mode is being introduced there.\n * So you will need to deal with the fact that there might not be an initialized canvas at any point in time.\n * @returns\n */\nexport function getCanvas(): Canvas {\n  if (!(canvas instanceof Canvas) || !canvas.ready) {\n    throw new Error('Canvas Is Not Initialized');\n  }\n  return canvas;\n}\n\n/**\n * Because typescript doesn't know when in the lifecycle of foundry your code runs, we have to assume that the\n * canvas is potentially not yet initialized, so it's typed as declare let canvas: Canvas | {ready: false}.\n * That's why you get errors when you try to access properties on canvas other than ready.\n * In order to get around that, you need to type guard canvas.\n * Also be aware that this will become even more important in 0.8.x because no canvas mode is being introduced there.\n * So you will need to deal with the fact that there might not be an initialized canvas at any point in time.\n * @returns\n */\nexport function getGame(): Game {\n  if (!(game instanceof Game)) {\n    throw new Error('Game Is Not Initialized');\n  }\n  return game;\n}\n\n// eslint-disable-next-line no-shadow\nexport enum SettingKeys {\n  openImagePath = 'default-container-opened-image-path',\n  closeImagePath = 'default-container-closed-image-path',\n  disableCurrencyLoot = 'disable-currency-loot',\n  defaultContainerCloseSound = 'default-container-close-sound',\n  defaultContainerOpenSound = 'default-container-open-sound',\n  version = 'version',\n  lootTokenData = 'lootTokenData',\n  parentItemFolderId = 'parentFolderId',\n  tokenFolderId = 'tokenFolderId',\n  itemFolderId = 'itemFolderId',\n  version13updatemessage = 'version13updatemessage',\n  GMActionTimeout = 'GMActionTimeout',\n  addItemOnContainerCreation = 'addItemOnContainerCreation',\n  enableLootTokenPerceiveReveal = 'enableLootTokenPerceiveReveal',\n  defaultMinimumPerceiveValue = 'defaultMinimumPerceiveValue',\n}\n\nconst systemCurrenciesImplemented = ['dnd5e', 'D35E'];\n\nexport const gmActionTimeout = (multiplier = 1000): number => {\n  return <number>(getGame().settings?.get(PICK_UP_STIX_MODULE_NAME, SettingKeys.GMActionTimeout) ?? 2) * multiplier;\n};\n\n// const imageTypeFunc = (val) => {\n// \treturn val;\n// }\n// Object.defineProperty(imageTypeFunc, 'name', {value: 'pick-up-stix-settings-image'});\n\n// const audioTypeFunc = (val) => {\n// \treturn val;\n// }\n// Object.defineProperty(audioTypeFunc, 'name', {value: 'pick-up-stix-settings-audio'});\n\nexport const registerSettings = function () {\n  log(`registerSettings`);\n  registerHiddenSettings();\n  registerWorldSettings();\n  registerClientSettings();\n};\n\nconst registerHiddenSettings = () => {\n  getGame().settings.register(PICK_UP_STIX_MODULE_NAME, SettingKeys.GMActionTimeout, {\n    name: 'GM Action Timeout',\n    hint: 'Controls the amount of time to wait for a GM client to perform a GM action before giving up',\n    scope: 'world',\n    type: Number,\n    default: 2,\n    config: false,\n  });\n\n  getGame().settings.register(PICK_UP_STIX_MODULE_NAME, SettingKeys.version13updatemessage, {\n    name: 'Version 13 Update Message',\n    hint: 'Tracks if user received the version 13 update message',\n    scope: 'world',\n    config: false,\n    type: Boolean,\n    default: false,\n  });\n\n  getGame().settings.register(PICK_UP_STIX_MODULE_NAME, SettingKeys.version, {\n    name: 'Version',\n    hint: 'Used to track which version is last loaded, so that we can give updates to users',\n    scope: 'world',\n    config: false,\n    type: String,\n    default: '0.0.0',\n  });\n\n  getGame().settings.register(PICK_UP_STIX_MODULE_NAME, SettingKeys.parentItemFolderId, {\n    name: 'Parent Item Folder ID',\n    hint: 'The folder ID of the main Pick-Up-Stix folder in the Items Directory',\n    scope: 'world',\n    config: false,\n    type: String,\n  });\n\n  getGame().settings.register(PICK_UP_STIX_MODULE_NAME, SettingKeys.itemFolderId, {\n    name: 'Items Folder ID',\n    hint: 'The Folder ID of the sub folder to hold templates for loot',\n    scope: 'world',\n    config: false,\n    type: String,\n  });\n\n  getGame().settings.register(PICK_UP_STIX_MODULE_NAME, SettingKeys.tokenFolderId, {\n    name: 'Tokens folder ID',\n    hint: 'The Folder ID of the sub folder to hold Items representing tokens',\n    scope: 'world',\n    config: false,\n    type: String,\n  });\n};\n\nconst registerWorldSettings = () => {\n  getGame().settings.register(PICK_UP_STIX_MODULE_NAME, SettingKeys.enableLootTokenPerceiveReveal, {\n    name: 'Loot Token Reveal',\n    hint: `Enables auto-revealing loot tokens that players with controlled tokens are able to see with their passive 'perceive' value.`,\n    scope: 'world',\n    config: getGame().system.id === 'dnd5e',\n    type: Boolean,\n    default: false,\n  });\n\n  getGame().settings.register(PICK_UP_STIX_MODULE_NAME, SettingKeys.defaultMinimumPerceiveValue, {\n    name: 'Minimum Perceive Value',\n    hint: `The minimum value a token's actor must have in order to perceive a hidden loot token.`,\n    scope: 'world',\n    config: getGame().system.id === 'dnd5e',\n    type: Number,\n    default: 10,\n  });\n\n  getGame().settings.register(PICK_UP_STIX_MODULE_NAME, SettingKeys.openImagePath, {\n    name: 'Default Container Opened Image',\n    hint: 'Sets the path for the default image to use for opened containers',\n    scope: 'world',\n    config: true,\n    //@ts-ignore\n    type: ImagePicker.Img, //imageTypeFunc,\n    default: 'modules/pick-up-stix/assets/chest-opened.png',\n  });\n\n  getGame().settings.register(PICK_UP_STIX_MODULE_NAME, SettingKeys.closeImagePath, {\n    name: 'Default Container Closed Image',\n    hint: 'Sets the path for the default image to use for closed containers',\n    scope: 'world',\n    config: true,\n    //@ts-ignore\n    type: ImagePicker.Img, //imageTypeFunc,\n    default: 'modules/pick-up-stix/assets/chest-closed.png',\n  });\n\n  getGame().settings.register(PICK_UP_STIX_MODULE_NAME, SettingKeys.disableCurrencyLoot, {\n    name: 'Disable Currency Loot',\n    hint: `This option is enabled by default for systems that have not been implemented in Pick-Up-Stix yet. You can also use it to manually disable currency if you don't wish to have currency as loot.`,\n    scope: 'world',\n    config: true,\n    type: Boolean,\n    default: !systemCurrenciesImplemented.includes(getGame().system.id),\n  });\n\n  getGame().settings.register(PICK_UP_STIX_MODULE_NAME, SettingKeys.defaultContainerOpenSound, {\n    name: 'Default Container Open Sound',\n    hint: 'The default sound to play when opening a container.',\n    scope: 'world',\n    //@ts-ignore\n    type: SoundPicker.Sound, //audioTypeFunc,\n    config: true,\n    default: '',\n  });\n\n  getGame().settings.register(PICK_UP_STIX_MODULE_NAME, SettingKeys.defaultContainerCloseSound, {\n    name: 'Default Container Close Sound',\n    hint: 'The default sound to play when closing a container.',\n    scope: 'world',\n    //@ts-ignore\n    type: SoundPicker.Sound, //audioTypeFunc,\n    config: true,\n    default: '',\n  });\n\n  getGame().settings.register(PICK_UP_STIX_MODULE_NAME, SettingKeys.addItemOnContainerCreation, {\n    name: 'Auto-add Item',\n    hint: `When enabled and dragging an Item to the canvas in order to create a container, the Item used to create the container will automatically be added to the created container rather than creating an empty container.`,\n    scope: 'world',\n    config: true,\n    type: Boolean,\n    default: true,\n  });\n};\n\nconst registerClientSettings = () => {\n  registerSettings();\n};\n\n// export function processHtml(html) {\n// \t$(html)\n// \t\t.find('input[data-dtype=\"pick-up-stix-settings-image\"')\n// \t\t.each(function() {\n// \t\t\tconst settingName = <string>($(this).attr('name')?.split('.')[1]);\n// \t\t\tlog(settingName);\n\n// \t\t\tlet picker = new FilePicker({\n// \t\t\t\ttype: 'image',\n// \t\t\t\tcurrent: getGame().settings?.get(PICK_UP_STIX_MODULE_NAME, settingName),\n// \t\t\t\tfield: $(this)[0]\n// \t\t\t});\n\n// \t\t\tlet pickerButton = $('<button type=\"button\" class=\"file-picker\" title=\"Pick image\"><i class=\"fas fa-file-import fa-fw\"></i></button>');\n// \t\t\tpickerButton.on(\"click\", function () {\n// \t\t\t\tpicker.render(true);\n// \t\t\t});\n// \t\t\t$(this).parent().append(pickerButton);\n// \t\t});\n\n// \t\t$(html)\n// \t\t.find('input[data-dtype=\"pick-up-stix-settings-audio\"')\n// \t\t.each(function() {\n// \t\t\tconst settingName = $(this).attr('name').split('.')[1];\n// \t\t\tlog(settingName);\n\n// \t\t\tlet picker = new FilePicker({\n// \t\t\t\ttype: 'audio',\n// \t\t\t\tcurrent: getGame().settings.get(PICK_UP_STIX_MODULE_NAME, settingName),\n// \t\t\t\tfield: $(this)[0]\n// \t\t\t});\n\n// \t\t\tlet pickerButton = $('<button type=\"button\" class=\"file-picker\" title=\"Pick image\"><i class=\"fas fa-file-import fa-fw\"></i></button>');\n// \t\t\tpickerButton.on(\"click\", function () {\n// \t\t\t\tpicker.render(true);\n// \t\t\t});\n// \t\t\t$(this).parent().append(pickerButton);\n// \t\t})\n// }\n"]}